// Automatically generated by MockGen. DO NOT EDIT!
// Source: ./controller/process_handler.go

package controller

import (
	gomock "github.com/golang/mock/gomock"
	http "net/http"
)

// Mock of ProcessController interface
type MockProcessController struct {
	ctrl     *gomock.Controller
	recorder *_MockProcessControllerRecorder
}

// Recorder for MockProcessController (not exported)
type _MockProcessControllerRecorder struct {
	mock *MockProcessController
}

func NewMockProcessController(ctrl *gomock.Controller) *MockProcessController {
	mock := &MockProcessController{ctrl: ctrl}
	mock.recorder = &_MockProcessControllerRecorder{mock}
	return mock
}

func (_m *MockProcessController) EXPECT() *_MockProcessControllerRecorder {
	return _m.recorder
}

func (_m *MockProcessController) HandleListProcess(w http.ResponseWriter, r *http.Request) {
	_m.ctrl.Call(_m, "HandleListProcess", w, r)
}

func (_mr *_MockProcessControllerRecorder) HandleListProcess(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "HandleListProcess", arg0, arg1)
}

func (_m *MockProcessController) HandleStartProcess(w http.ResponseWriter, r *http.Request) {
	_m.ctrl.Call(_m, "HandleStartProcess", w, r)
}

func (_mr *_MockProcessControllerRecorder) HandleStartProcess(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "HandleStartProcess", arg0, arg1)
}

func (_m *MockProcessController) HandleStartProcessAdmin(w http.ResponseWriter, r *http.Request) {
	_m.ctrl.Call(_m, "HandleStartProcessAdmin", w, r)
}

func (_mr *_MockProcessControllerRecorder) HandleStartProcessAdmin(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "HandleStartProcessAdmin", arg0, arg1)
}

func (_m *MockProcessController) HandleProcessSignal(w http.ResponseWriter, r *http.Request) {
	_m.ctrl.Call(_m, "HandleProcessSignal", w, r)
}

func (_mr *_MockProcessControllerRecorder) HandleProcessSignal(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "HandleProcessSignal", arg0, arg1)
}

func (_m *MockProcessController) HandleProcessInput(w http.ResponseWriter, r *http.Request) {
	_m.ctrl.Call(_m, "HandleProcessInput", w, r)
}

func (_mr *_MockProcessControllerRecorder) HandleProcessInput(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "HandleProcessInput", arg0, arg1)
}

func (_m *MockProcessController) HandleProcessOutput(w http.ResponseWriter, r *http.Request) {
	_m.ctrl.Call(_m, "HandleProcessOutput", w, r)
}

func (_mr *_MockProcessControllerRecorder) HandleProcessOutput(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "HandleProcessOutput", arg0, arg1)
}

func (_m *MockProcessController) HandleProcessStatus(w http.ResponseWriter, r *http.Request) {
	_m.ctrl.Call(_m, "HandleProcessStatus", w, r)
}

func (_mr *_MockProcessControllerRecorder) HandleProcessStatus(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "HandleProcessStatus", arg0, arg1)
}
