package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// SlpProcessState Values allowed for a process state
// swagger:model slp_process_state
type SlpProcessState string

const (
	SlpProcessStateSlpProcessStateACTIVE   SlpProcessState = "slp.process.state.ACTIVE"
	SlpProcessStateSlpProcessStateFINISHED SlpProcessState = "slp.process.state.FINISHED"
)

// for schema
var slpProcessStateEnum []interface{}

func (m SlpProcessState) validateSlpProcessStateEnum(path, location string, value SlpProcessState) error {
	if slpProcessStateEnum == nil {
		var res []SlpProcessState
		if err := json.Unmarshal([]byte(`["slp.process.state.ACTIVE","slp.process.state.FINISHED"]`), &res); err != nil {
			return err
		}
		for _, v := range res {
			slpProcessStateEnum = append(slpProcessStateEnum, v)
		}
	}
	if err := validate.Enum(path, location, value, slpProcessStateEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this slp process state
func (m SlpProcessState) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateSlpProcessStateEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
