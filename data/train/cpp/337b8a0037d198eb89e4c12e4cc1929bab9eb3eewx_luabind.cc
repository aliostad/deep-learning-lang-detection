#include <precompile.h>

#include "wx_luabind.h"

#define DECLARE_WXLUA_BINDFUNC(name) \
    int luaopen_##name(lua_State* L); \

#define INVOKE_WXLUA_BINDFUNC(name) \
    luaopen_##name(L); \

DECLARE_WXLUA_BINDFUNC(defs);
DECLARE_WXLUA_BINDFUNC(clntdata);
DECLARE_WXLUA_BINDFUNC(object);
DECLARE_WXLUA_BINDFUNC(gdiobj);
DECLARE_WXLUA_BINDFUNC(dc);
DECLARE_WXLUA_BINDFUNC(event);
DECLARE_WXLUA_BINDFUNC(window);
DECLARE_WXLUA_BINDFUNC(control);
DECLARE_WXLUA_BINDFUNC(ctrlsub);
DECLARE_WXLUA_BINDFUNC(toplevel);
DECLARE_WXLUA_BINDFUNC(treebase);
DECLARE_WXLUA_BINDFUNC(combobox);
DECLARE_WXLUA_BINDFUNC(combo);
DECLARE_WXLUA_BINDFUNC(odcombo);

DECLARE_WXLUA_BINDFUNC(aboutdlg);
DECLARE_WXLUA_BINDFUNC(accel);
DECLARE_WXLUA_BINDFUNC(anidecod);
DECLARE_WXLUA_BINDFUNC(animate);
DECLARE_WXLUA_BINDFUNC(animdecod);
DECLARE_WXLUA_BINDFUNC(artprov);
DECLARE_WXLUA_BINDFUNC(bitmap);
DECLARE_WXLUA_BINDFUNC(bookctrl);
DECLARE_WXLUA_BINDFUNC(brush);
DECLARE_WXLUA_BINDFUNC(busyinfo);
DECLARE_WXLUA_BINDFUNC(button);
DECLARE_WXLUA_BINDFUNC(calctrl);
DECLARE_WXLUA_BINDFUNC(caret);
DECLARE_WXLUA_BINDFUNC(checkbox);
DECLARE_WXLUA_BINDFUNC(checklst);
DECLARE_WXLUA_BINDFUNC(collpane);
DECLARE_WXLUA_BINDFUNC(colour);
DECLARE_WXLUA_BINDFUNC(cursor);
DECLARE_WXLUA_BINDFUNC(dialog);
DECLARE_WXLUA_BINDFUNC(dirctrl);
DECLARE_WXLUA_BINDFUNC(dirdlg);
DECLARE_WXLUA_BINDFUNC(dnd);
DECLARE_WXLUA_BINDFUNC(frame);
DECLARE_WXLUA_BINDFUNC(gdicmn);
DECLARE_WXLUA_BINDFUNC(image);
DECLARE_WXLUA_BINDFUNC(listbox);
DECLARE_WXLUA_BINDFUNC(menu);
DECLARE_WXLUA_BINDFUNC(msgdlg);
DECLARE_WXLUA_BINDFUNC(panel);
DECLARE_WXLUA_BINDFUNC(radiobox);
DECLARE_WXLUA_BINDFUNC(radiobut);
DECLARE_WXLUA_BINDFUNC(sizer);
DECLARE_WXLUA_BINDFUNC(spinctrl);
DECLARE_WXLUA_BINDFUNC(statbox);
DECLARE_WXLUA_BINDFUNC(stattext);
DECLARE_WXLUA_BINDFUNC(statusbar);
DECLARE_WXLUA_BINDFUNC(textctrl);
DECLARE_WXLUA_BINDFUNC(toolbar);
DECLARE_WXLUA_BINDFUNC(tooltip);
DECLARE_WXLUA_BINDFUNC(treectrl);

DECLARE_WXLUA_BINDFUNC(app);
DECLARE_WXLUA_BINDFUNC(wxstring);
DECLARE_WXLUA_BINDFUNC(version);
DECLARE_WXLUA_BINDFUNC(wxchar);

DECLARE_WXLUA_BINDFUNC(bmpcbox);

DECLARE_WXLUA_BINDFUNC(auibar);
DECLARE_WXLUA_BINDFUNC(auibook);
DECLARE_WXLUA_BINDFUNC(dockart);
DECLARE_WXLUA_BINDFUNC(floatpane);
DECLARE_WXLUA_BINDFUNC(framemanager);
DECLARE_WXLUA_BINDFUNC(tabmdi);

DECLARE_WXLUA_BINDFUNC(xmlres);

int luaopen_wx(lua_State* L)
{
    open(L);

    NEW_LUA_TABLE(wx);

    {   // prebind libs
        INVOKE_WXLUA_BINDFUNC(defs);
        INVOKE_WXLUA_BINDFUNC(clntdata);
        INVOKE_WXLUA_BINDFUNC(object);
        INVOKE_WXLUA_BINDFUNC(gdiobj);
        INVOKE_WXLUA_BINDFUNC(dc);
        INVOKE_WXLUA_BINDFUNC(event);
        INVOKE_WXLUA_BINDFUNC(window);
        INVOKE_WXLUA_BINDFUNC(control);
        INVOKE_WXLUA_BINDFUNC(ctrlsub);
        INVOKE_WXLUA_BINDFUNC(toplevel);
        INVOKE_WXLUA_BINDFUNC(treebase);
        INVOKE_WXLUA_BINDFUNC(combobox);
        INVOKE_WXLUA_BINDFUNC(combo);
        INVOKE_WXLUA_BINDFUNC(odcombo);
    }

    INVOKE_WXLUA_BINDFUNC(aboutdlg);
    INVOKE_WXLUA_BINDFUNC(accel);
    INVOKE_WXLUA_BINDFUNC(anidecod);
    INVOKE_WXLUA_BINDFUNC(animate);
    INVOKE_WXLUA_BINDFUNC(animdecod);
    INVOKE_WXLUA_BINDFUNC(artprov);
    INVOKE_WXLUA_BINDFUNC(bitmap);
    INVOKE_WXLUA_BINDFUNC(bookctrl);
    INVOKE_WXLUA_BINDFUNC(brush);
    INVOKE_WXLUA_BINDFUNC(busyinfo);
    INVOKE_WXLUA_BINDFUNC(button);
    INVOKE_WXLUA_BINDFUNC(calctrl);
    INVOKE_WXLUA_BINDFUNC(caret);
    INVOKE_WXLUA_BINDFUNC(checkbox);

    INVOKE_WXLUA_BINDFUNC(listbox);
    INVOKE_WXLUA_BINDFUNC(checklst);

    INVOKE_WXLUA_BINDFUNC(collpane);
    INVOKE_WXLUA_BINDFUNC(colour);
    INVOKE_WXLUA_BINDFUNC(cursor);
    INVOKE_WXLUA_BINDFUNC(dialog);
    //INVOKE_WXLUA_BINDFUNC(dirctrl);
    INVOKE_WXLUA_BINDFUNC(dirdlg);
    INVOKE_WXLUA_BINDFUNC(dnd);
    INVOKE_WXLUA_BINDFUNC(frame);
    INVOKE_WXLUA_BINDFUNC(gdicmn);
    INVOKE_WXLUA_BINDFUNC(image);
    INVOKE_WXLUA_BINDFUNC(menu);
    INVOKE_WXLUA_BINDFUNC(msgdlg);
    INVOKE_WXLUA_BINDFUNC(panel);
    INVOKE_WXLUA_BINDFUNC(sizer);
    INVOKE_WXLUA_BINDFUNC(spinctrl);

    INVOKE_WXLUA_BINDFUNC(statbox);
    INVOKE_WXLUA_BINDFUNC(radiobox);
    INVOKE_WXLUA_BINDFUNC(radiobut);

    INVOKE_WXLUA_BINDFUNC(stattext);
    INVOKE_WXLUA_BINDFUNC(statusbar);
    INVOKE_WXLUA_BINDFUNC(textctrl);
    INVOKE_WXLUA_BINDFUNC(toolbar);
    INVOKE_WXLUA_BINDFUNC(tooltip);
    INVOKE_WXLUA_BINDFUNC(treectrl);

    INVOKE_WXLUA_BINDFUNC(app);
    INVOKE_WXLUA_BINDFUNC(wxstring);
    INVOKE_WXLUA_BINDFUNC(version);
    INVOKE_WXLUA_BINDFUNC(wxchar);

    INVOKE_WXLUA_BINDFUNC(bmpcbox);

    INVOKE_WXLUA_BINDFUNC(auibar);
    INVOKE_WXLUA_BINDFUNC(auibook);
    INVOKE_WXLUA_BINDFUNC(dockart);
    INVOKE_WXLUA_BINDFUNC(floatpane);
    INVOKE_WXLUA_BINDFUNC(framemanager);
    INVOKE_WXLUA_BINDFUNC(tabmdi);

    INVOKE_WXLUA_BINDFUNC(xmlres);

    return 0;
}
