#!/bin/bash -x
#
#


# -- write phylogenetic tree
#
echo "(((A,B),C) PINKY ,(D,E));" >| exU.tree

cat << ENDE >| exU.cm
0 { gss{ R, ssA:A, ssB:B } }
1 { gss{ R2, ss_pinky_clade:PINKY } }
ENDE

# -- create a codon model with randomized parameters, and equilibrate.
#
../bin/CodeAxe -create-model -site-model codon -rate-model gy94 -select-model single -root-model obs-avg -tree-file exU.tree -cat-model-file exU.cm -unlock-cat-prob -random-param -reversible-tree |\
cat >| exU.model.random
#../bin/CodeAxe -norm -in-model - >| exU.model.random

# -- simulate sequences from the equilibrated random model
#
../bin/CodeAxe -sim -sim-size 100000 -sim-model discrete -in-model exU.model.random >| exU.data.sim

# self lhood
#
../bin/CodeAxe -lhood -in-model exU.model.random -in-data exU.data.sim >| exU.model.random.lhood



# no cat trained model::
#
# -- create a starting model
#
../bin/CodeAxe -create-model -site-model codon -rate-model gy94 -select-model single -root-model obs-avg -tree-file exU.tree -in-data exU.data.sim -reversible-tree >| exU.model.start

# -- train model
#
../bin/CodeAxe -ml -in-model exU.model.start -in-data exU.data.sim >| exU.model.trained 2>| exU.model.ml.stderr

# -- get the likelihood & likelihood/codon of the trained model
#
../bin/CodeAxe -lhood -in-model exU.model.trained -in-data exU.data.sim >| exU.model.trained.lhood

# -- summarize parameters from the trained model
#
../bin/CodeAxe -report-model -in-model exU.model.trained >| exU.model.trained.report



# branch cat trained_model::
#
# -- create a starting model
#
../bin/CodeAxe -create-model -site-model codon -rate-model gy94 -select-model single -root-model obs-avg -tree-file exU.tree -cat-model-file exU.cm -unlock-cat-prob -in-data exU.data.sim -reversible-tree -random-param >| exU.model.2.start

# -- train model
#
../bin/CodeAxe -ml -in-model exU.model.2.start -in-data exU.data.sim >| exU.model.2.trained 2>| exU.model.2.ml.stderr

# -- get the likelihood & likelihood/codon of the trained model
#
../bin/CodeAxe -lhood -in-model exU.model.2.trained -in-data exU.data.sim >| exU.model.2.trained.lhood

# -- summarize parameters from the trained model
#
../bin/CodeAxe -report-model -in-model exU.model.2.trained >| exU.model.2.trained.report

