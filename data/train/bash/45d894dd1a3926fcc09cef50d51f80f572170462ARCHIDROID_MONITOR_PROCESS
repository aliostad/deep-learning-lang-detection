#!/system/bin/sh

#     _             _     _ ____            _     _
#    / \   _ __ ___| |__ (_)  _ \ _ __ ___ (_) __| |
#   / _ \ | '__/ __| '_ \| | | | | '__/ _ \| |/ _` |
#  / ___ \| | | (__| | | | | |_| | | | (_) | | (_| |
# /_/   \_\_|  \___|_| |_|_|____/|_|  \___/|_|\__,_|
#
# Copyright 2014 Łukasz "JustArchi" Domeradzki
# Contact: JustArchi@JustArchi.net
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Error code 0 -> Monitoring has been finished due to proper signal through $ADSTATUS
# Error code 1 -> No process has been specified for monitoring
# Error code 2 -> Specified process is dead already, nothing to monitor
# Error code 3 -> Specified process died during monitoring, but we couldn't bring it back

PROCESS="$1"
if [ -z "$PROCESS" ]; then
	echo "PROCESS_MONITOR: No process given!"
	exit 1
fi

AD="/data/media/0/MrturDroid"
ADSYS="/system/archidroid"
ADPROC="$ADSYS/tmpfs"
ADCRON="$ADPROC/cron"
LOG="$AD/Cron.log"
MONITORS_DIR="$ADCRON/monitors"
ADSTATUS="$MONITORS_DIR/$PROCESS"

exec 1>>"$LOG"
exec 2>&1

PROCESS_WAIT_FOR_FINISH() {
	if [ ! -z "$1" ] && [ -d "/proc/$1" ]; then
		while [ -d "/proc/$1" ]; do
			sleep 1
		done
	fi
}

MONITOR_PROCESS() {
	local MONITORPID="$(pidof "$PROCESS")"
	if [ -z "$MONITORPID" ]; then
		echo "PROCESS_MONITOR: Process $PROCESS is dead already!"
		echo "PROCESS_MONITOR: Finishing..."; rm -f "$ADSTATUS"; kill 0; exit 2
	fi
	echo "PROCESS_MONITOR: $PROCESS with PID $MONITORPID is active and monitored"
	while :; do
		PROCESS_WAIT_FOR_FINISH "$MONITORPID"
		echo "PROCESS_MONITOR: $PROCESS with PID $MONITORPID has just died, restarting..."
		ARCHIDROID_INIT "START" "$PROCESS"
		MONITORPID="$(pidof "$PROCESS")"
		if [ -z "$MONITORPID" ]; then
			echo "PROCESS_MONITOR: ERROR: Couldn't bring back $PROCESS!"
			echo "PROCESS_MONITOR: Finishing..."; rm -f "$ADSTATUS"; kill 0; exit 3
		fi
		echo "PROCESS_MONITOR: Success! $PROCESS with PID $MONITORPID is active and monitored..."
	done
}

if [ -f "$ADSTATUS" ]; then
	rm -f "$ADSTATUS"
	sleep 1 # If there was a previous instance of the same monitor, give it a time to cleanup and finish
fi

MONITOR_PROCESS &

mkdir -p "$MONITORS_DIR"
echo "$$" > "$ADSTATUS"
inotifywait -qq -e delete -e modify "$ADSTATUS"
echo "PROCESS_MONITOR: Caught EXIT signal!"
echo "PROCESS_MONITOR: Finishing..."; kill 0
exit 0