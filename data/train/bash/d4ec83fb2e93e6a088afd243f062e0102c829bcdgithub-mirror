#!/bin/bash
# github-mirror - http://github.com/mattias-ohlsson/github-mirror
# Mirror with local bare repository
# Usage: github-mirror user-name/project-name

set -e

REPO_FULL_NAME=$1

GITHUB_API_REPO_JSON=$(curl -s https://api.github.com/repos/$REPO_FULL_NAME)

REPO_OWNER_URL=$(echo "$GITHUB_API_REPO_JSON" | sed -n '/"owner": {/,/},/p' | grep '"url":' | cut -d'"' -f4)
GITHUB_API_OWNER_JSON=$(curl -s $REPO_OWNER_URL)

OWNER_NAME=$(echo "$GITHUB_API_OWNER_JSON" | grep '"name":' | cut -d'"' -f4)

REPO_CLONE_URL=$(echo "$GITHUB_API_REPO_JSON" | grep '"clone_url":' | cut -d'"' -f4)
REPO_DESCRIPTION=$(echo "$GITHUB_API_REPO_JSON" | grep '"description":' | cut -d'"' -f4)
REPO_NAME=$(echo "$GITHUB_API_REPO_JSON" | grep '"name":' | cut -d'"' -f4)

echo "REPO_FULL_NAME:   $REPO_FULL_NAME"
echo "REPO_NAME:        $REPO_NAME"
echo "REPO_DESCRIPTION: $REPO_DESCRIPTION"
echo "REPO_CLONE_URL:   $REPO_CLONE_URL"
echo "OWNER_NAME:       $OWNER_NAME"
echo "REPO_OWNER_URL:   $REPO_OWNER_URL"

git clone --mirror $REPO_CLONE_URL || echo "Skipping git clone (local repository already exists)"

cd $REPO_NAME.git
git fetch -q

echo $REPO_DESCRIPTION > description

if [ -n "$OWNER_NAME" ]; then
    git config gitweb.owner "$OWNER_NAME"
fi
