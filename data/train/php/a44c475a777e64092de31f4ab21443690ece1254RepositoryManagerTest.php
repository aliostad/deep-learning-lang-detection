<?php
namespace BNRepo\Tests\Repository;

use BNRepo\Repository\RepositoryManager;
use Symfony\Component\Yaml\Yaml;


/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-04-13 at 13:34:33.
 */
class RepositoryManagerTest extends \PHPUnit_Framework_TestCase {

	/**
	 * Dir for Testings
	 */
	const DIR = '/tmp/';

	public $cfg = array(
		'test' => array( // test LocalFS
			'id' => 'test',
			'type' => 'local',
			'dir' => '/tmp'
		),
		'test2' => array(
			'type' => 'local',
			'create' => true,
			'dir' => '/tmp/asdf'
		)
	);

	/**
	 * @var RepositoryManager
	 */
	protected $object;


	/**
	 * @covers BNRepo\Repository\RepositoryManager::getRepository
	 */
	public function testGetRepository() {
		RepositoryManager::reset();
		// Check LocalFS
		RepositoryManager::addRepository($this->cfg['test']);
		$local = RepositoryManager::getRepository('test');
		$this->assertInstanceOf('\BNRepo\Repository\Repository', $local, 'RepositoryClass Check');
		$this->assertInstanceOf('\BNRepo\Repository\Adapter\AdapterLocal', $local->getAdapter(), 'RepositoryAdapterClass Check');
	}

	/**
	 * @covers BNRepo\Repository\RepositoryManager::importRepositoriesFromYamlFile
	 */
	public function testImportRepositoriesFromYamlFile() {
		RepositoryManager::reset();
		$yaml_string = Yaml::dump($this->cfg);
		$file = self::DIR.'repositoryTest_'.uniqid().'.yaml';
		file_put_contents($file, $yaml_string);
		RepositoryManager::importRepositoriesFromYamlFile($file);
		unlink($file);

		$this->assertEquals($this->cfg['test'], RepositoryManager::$config['test'], 'yaml import from file');
		$cfgWithId = $this->cfg['test2'];
		$cfgWithId['id'] = 'test2';
		$this->assertEquals($cfgWithId, RepositoryManager::$config['test2'], 'yaml import from file');
	}

	/**
	 * @covers BNRepo\Repository\RepositoryManager::addRepository
	 */
	public function testAddRepository() {
		RepositoryManager::reset();
		RepositoryManager::addRepository($this->cfg['test']);
		$this->assertEquals($this->cfg['test'], RepositoryManager::$config[$this->cfg['test']['id']]);
	}

	/**
	 * @covers BNRepo\Repository\RepositoryManager::addRepository
	 * @expectedException BNRepo\Repository\RepositoryAlreadyExistsException
	 */
	public function testAddRepositoryOverwriteFailed() {
		RepositoryManager::reset();
		RepositoryManager::addRepository($this->cfg['test']);
		RepositoryManager::addRepository($this->cfg['test']);
	}

	/**
	 * @covers BNRepo\Repository\RepositoryManager::addRepository
	 */
	public function testAddRepositoryOverwriteForce() {
		RepositoryManager::reset();
		RepositoryManager::addRepository($this->cfg['test']);

		$t = $this->cfg['test'];
		$t['dir'] = '/tmp2';
		RepositoryManager::addRepository($t, true);
		$this->assertEquals($t, RepositoryManager::$config[$t['id']]);
	}

}
