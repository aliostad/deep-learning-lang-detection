module Fix44.CompoundItemFactoryFuncs

// **** this file is generated by fsFixGen ****

open OneOrTwo
open Fix44.Fields
open Fix44.CompoundItems




let MkNoUnderlyingSecurityAltIDGrp (underlyingSecurityAltID:UnderlyingSecurityAltID) : NoUnderlyingSecurityAltIDGrp = {
    UnderlyingSecurityAltID = underlyingSecurityAltID
    UnderlyingSecurityAltIDSource = None
  }


let MkNoUnderlyingStipsGrp (underlyingStipType:UnderlyingStipType) : NoUnderlyingStipsGrp = {
    UnderlyingStipType = underlyingStipType
    UnderlyingStipValue = None
  }


let MkUnderlyingInstrument (underlyingSymbol:UnderlyingSymbol) : UnderlyingInstrument = {
    UnderlyingSymbol = underlyingSymbol
    UnderlyingSymbolSfx = None
    UnderlyingSecurityID = None
    UnderlyingSecurityIDSource = None
    NoUnderlyingSecurityAltIDGrp = None
    UnderlyingProduct = None
    UnderlyingCFICode = None
    UnderlyingSecurityType = None
    UnderlyingSecuritySubType = None
    UnderlyingMaturityMonthYear = None
    UnderlyingMaturityDate = None
    UnderlyingPutOrCall = None
    UnderlyingCouponPaymentDate = None
    UnderlyingIssueDate = None
    UnderlyingRepoCollateralSecurityType = None
    UnderlyingRepurchaseTerm = None
    UnderlyingRepurchaseRate = None
    UnderlyingFactor = None
    UnderlyingCreditRating = None
    UnderlyingInstrRegistry = None
    UnderlyingCountryOfIssue = None
    UnderlyingStateOrProvinceOfIssue = None
    UnderlyingLocaleOfIssue = None
    UnderlyingRedemptionDate = None
    UnderlyingStrikePrice = None
    UnderlyingStrikeCurrency = None
    UnderlyingOptAttribute = None
    UnderlyingContractMultiplier = None
    UnderlyingCouponRate = None
    UnderlyingSecurityExchange = None
    UnderlyingIssuer = None
    EncodedUnderlyingIssuer = None
    UnderlyingSecurityDesc = None
    EncodedUnderlyingSecurityDesc = None
    UnderlyingCPProgram = None
    UnderlyingCPRegType = None
    UnderlyingCurrency = None
    UnderlyingQty = None
    UnderlyingPx = None
    UnderlyingDirtyPrice = None
    UnderlyingEndPrice = None
    UnderlyingStartValue = None
    UnderlyingCurrentValue = None
    UnderlyingEndValue = None
    NoUnderlyingStipsGrp = None
  }


let MkCollateralResponseNoUnderlyingsGrp (underlyingInstrument:UnderlyingInstrument) : CollateralResponseNoUnderlyingsGrp = {
    UnderlyingInstrument = underlyingInstrument
    CollAction = None
  }


let MkCollateralAssignmentNoUnderlyingsGrp (underlyingInstrument:UnderlyingInstrument) : CollateralAssignmentNoUnderlyingsGrp = {
    UnderlyingInstrument = underlyingInstrument
    CollAction = None
  }


let MkCollateralRequestNoUnderlyingsGrp (underlyingInstrument:UnderlyingInstrument) : CollateralRequestNoUnderlyingsGrp = {
    UnderlyingInstrument = underlyingInstrument
    CollAction = None
  }


let MkPositionReportNoUnderlyingsGrp (underlyingInstrument:UnderlyingInstrument, underlyingSettlPrice:UnderlyingSettlPrice, underlyingSettlPriceType:UnderlyingSettlPriceType) : PositionReportNoUnderlyingsGrp = {
    UnderlyingInstrument = underlyingInstrument
    UnderlyingSettlPrice = underlyingSettlPrice
    UnderlyingSettlPriceType = underlyingSettlPriceType
  }


let MkNoNestedPartySubIDsGrp (nestedPartySubID:NestedPartySubID) : NoNestedPartySubIDsGrp = {
    NestedPartySubID = nestedPartySubID
    NestedPartySubIDType = None
  }


let MkNoNestedPartyIDsGrp (nestedPartyID:NestedPartyID) : NoNestedPartyIDsGrp = {
    NestedPartyID = nestedPartyID
    NestedPartyIDSource = None
    NestedPartyRole = None
    NoNestedPartySubIDsGrp = None
  }


let MkNoPositionsGrp (posType:PosType) : NoPositionsGrp = {
    PosType = posType
    LongQty = None
    ShortQty = None
    PosQtyStatus = None
    NoNestedPartyIDsGrp = None
  }


let MkPositionQty (noPositionsGrp:NoPositionsGrp list) : PositionQty = {
    NoPositionsGrp = noPositionsGrp
  }


let MkNoRegistDtlsGrp (registDtls:RegistDtls) : NoRegistDtlsGrp = {
    RegistDtls = registDtls
    RegistEmail = None
    MailingDtls = None
    MailingInst = None
    NoNestedPartyIDsGrp = None
    OwnerType = None
    DateOfBirth = None
    InvestorCountryOfResidence = None
  }


let MkNoNested2PartySubIDsGrp (nested2PartySubID:Nested2PartySubID) : NoNested2PartySubIDsGrp = {
    Nested2PartySubID = nested2PartySubID
    Nested2PartySubIDType = None
  }


let MkNoNested2PartyIDsGrp (nested2PartyID:Nested2PartyID) : NoNested2PartyIDsGrp = {
    Nested2PartyID = nested2PartyID
    Nested2PartyIDSource = None
    Nested2PartyRole = None
    NoNested2PartySubIDsGrp = None
  }


let MkTradeCaptureReportAckNoAllocsGrp (allocAccount:AllocAccount) : TradeCaptureReportAckNoAllocsGrp = {
    AllocAccount = allocAccount
    AllocAcctIDSource = None
    AllocSettlCurrency = None
    IndividualAllocID = None
    NoNested2PartyIDsGrp = None
    AllocQty = None
  }


let MkNoLegSecurityAltIDGrp (legSecurityAltID:LegSecurityAltID) : NoLegSecurityAltIDGrp = {
    LegSecurityAltID = legSecurityAltID
    LegSecurityAltIDSource = None
  }


let MkInstrumentLegFG (legSymbol:LegSymbol) : InstrumentLegFG = {
    LegSymbol = legSymbol
    LegSymbolSfx = None
    LegSecurityID = None
    LegSecurityIDSource = None
    NoLegSecurityAltIDGrp = None
    LegProduct = None
    LegCFICode = None
    LegSecurityType = None
    LegSecuritySubType = None
    LegMaturityMonthYear = None
    LegMaturityDate = None
    LegCouponPaymentDate = None
    LegIssueDate = None
    LegRepoCollateralSecurityType = None
    LegRepurchaseTerm = None
    LegRepurchaseRate = None
    LegFactor = None
    LegCreditRating = None
    LegInstrRegistry = None
    LegCountryOfIssue = None
    LegStateOrProvinceOfIssue = None
    LegLocaleOfIssue = None
    LegRedemptionDate = None
    LegStrikePrice = None
    LegStrikeCurrency = None
    LegOptAttribute = None
    LegContractMultiplier = None
    LegCouponRate = None
    LegSecurityExchange = None
    LegIssuer = None
    EncodedLegIssuer = None
    LegSecurityDesc = None
    EncodedLegSecurityDesc = None
    LegRatioQty = None
    LegSide = None
    LegCurrency = None
    LegPool = None
    LegDatedDate = None
    LegContractSettlMonth = None
    LegInterestAccrualDate = None
  }


let MkNoLegStipulationsGrp (legStipulationType:LegStipulationType) : NoLegStipulationsGrp = {
    LegStipulationType = legStipulationType
    LegStipulationValue = None
  }


let MkTradeCaptureReportAckNoLegsGrp (instrumentLegFG:InstrumentLegFG) : TradeCaptureReportAckNoLegsGrp = {
    InstrumentLegFG = instrumentLegFG
    LegQty = None
    LegSwapType = None
    NoLegStipulationsGrp = None
    LegPositionEffect = None
    LegCoveredOrUncovered = None
    NoNestedPartyIDsGrp = None
    LegRefID = None
    LegPrice = None
    LegSettlType = None
    LegSettlDate = None
    LegLastPx = None
  }


let MkNoPartySubIDsGrp (partySubID:PartySubID) : NoPartySubIDsGrp = {
    PartySubID = partySubID
    PartySubIDType = None
  }


let MkNoPartyIDsGrp (partyID:PartyID) : NoPartyIDsGrp = {
    PartyID = partyID
    PartyIDSource = None
    PartyRole = None
    NoPartySubIDsGrp = None
  }


let MkNoClearingInstructionsGrp (clearingInstruction:ClearingInstruction) : NoClearingInstructionsGrp = {
    ClearingInstruction = clearingInstruction
  }


let MkCommissionData () : CommissionData = {
    Commission = None
    CommType = None
    CommCurrency = None
    FundRenewWaiv = None
  }


let MkNoContAmtsGrp (contAmtType:ContAmtType) : NoContAmtsGrp = {
    ContAmtType = contAmtType
    ContAmtValue = None
    ContAmtCurr = None
  }


let MkNoStipulationsGrp (stipulationType:StipulationType) : NoStipulationsGrp = {
    StipulationType = stipulationType
    StipulationValue = None
  }


let MkNoMiscFeesGrp (miscFeeAmt:MiscFeeAmt) : NoMiscFeesGrp = {
    MiscFeeAmt = miscFeeAmt
    MiscFeeCurr = None
    MiscFeeType = None
    MiscFeeBasis = None
  }


let MkTradeCaptureReportNoAllocsGrp (allocAccount:AllocAccount) : TradeCaptureReportNoAllocsGrp = {
    AllocAccount = allocAccount
    AllocAcctIDSource = None
    AllocSettlCurrency = None
    IndividualAllocID = None
    NoNested2PartyIDsGrp = None
    AllocQty = None
  }


let MkTradeCaptureReportNoSidesGrp (side:Side, orderID:OrderID, commissionData:CommissionData) : TradeCaptureReportNoSidesGrp = {
    Side = side
    OrderID = orderID
    SecondaryOrderID = None
    ClOrdID = None
    SecondaryClOrdID = None
    ListID = None
    NoPartyIDsGrp = None
    Account = None
    AcctIDSource = None
    AccountType = None
    ProcessCode = None
    OddLot = None
    NoClearingInstructionsGrp = None
    ClearingFeeIndicator = None
    TradeInputSource = None
    TradeInputDevice = None
    OrderInputDevice = None
    Currency = None
    ComplianceID = None
    SolicitedFlag = None
    OrderCapacity = None
    OrderRestrictions = None
    CustOrderCapacity = None
    OrdType = None
    ExecInst = None
    TransBkdTime = None
    TradingSessionID = None
    TradingSessionSubID = None
    TimeBracket = None
    CommissionData = commissionData
    GrossTradeAmt = None
    NumDaysInterest = None
    ExDate = None
    AccruedInterestRate = None
    AccruedInterestAmt = None
    InterestAtMaturity = None
    EndAccruedInterestAmt = None
    StartCash = None
    EndCash = None
    Concession = None
    TotalTakedown = None
    NetMoney = None
    SettlCurrAmt = None
    SettlCurrency = None
    SettlCurrFxRate = None
    SettlCurrFxRateCalc = None
    PositionEffect = None
    Text = None
    EncodedText = None
    SideMultiLegReportingType = None
    NoContAmtsGrp = None
    NoStipulationsGrp = None
    NoMiscFeesGrp = None
    ExchangeRule = None
    TradeAllocIndicator = None
    PreallocMethod = None
    AllocID = None
    TradeCaptureReportNoAllocsGrp = None
  }


let MkTradeCaptureReportNoLegsGrp (instrumentLegFG:InstrumentLegFG) : TradeCaptureReportNoLegsGrp = {
    InstrumentLegFG = instrumentLegFG
    LegQty = None
    LegSwapType = None
    NoLegStipulationsGrp = None
    LegPositionEffect = None
    LegCoveredOrUncovered = None
    NoNestedPartyIDsGrp = None
    LegRefID = None
    LegPrice = None
    LegSettlType = None
    LegSettlDate = None
    LegLastPx = None
  }


let MkNoPosAmtGrp (posAmtType:PosAmtType, posAmt:PosAmt) : NoPosAmtGrp = {
    PosAmtType = posAmtType
    PosAmt = posAmt
  }


let MkPositionAmountData (noPosAmtGrp:NoPosAmtGrp list) : PositionAmountData = {
    NoPosAmtGrp = noPosAmtGrp
  }


let MkNoSettlPartySubIDsGrp (settlPartySubID:SettlPartySubID) : NoSettlPartySubIDsGrp = {
    SettlPartySubID = settlPartySubID
    SettlPartySubIDType = None
  }


let MkNoSettlPartyIDsGrp (settlPartyID:SettlPartyID) : NoSettlPartyIDsGrp = {
    SettlPartyID = settlPartyID
    SettlPartyIDSource = None
    SettlPartyRole = None
    NoSettlPartySubIDsGrp = None
  }


let MkNoDlvyInstGrp (settlInstSource:SettlInstSource) : NoDlvyInstGrp = {
    SettlInstSource = settlInstSource
    DlvyInstType = None
    NoSettlPartyIDsGrp = None
  }


let MkSettlInstructionsData () : SettlInstructionsData = {
    SettlDeliveryType = None
    StandInstDbType = None
    StandInstDbName = None
    StandInstDbID = None
    NoDlvyInstGrp = None
  }


let MkNoSettlInstGrp (settlInstID:SettlInstID, settlInstructionsData:SettlInstructionsData) : NoSettlInstGrp = {
    SettlInstID = settlInstID
    SettlInstTransType = None
    SettlInstRefID = None
    NoPartyIDsGrp = None
    Side = None
    Product = None
    SecurityType = None
    CFICode = None
    EffectiveTime = None
    ExpireTime = None
    LastUpdateTime = None
    SettlInstructionsData = settlInstructionsData
    PaymentMethod = None
    PaymentRef = None
    CardHolderName = None
    CardNumber = None
    CardStartDate = None
    CardExpDate = None
    CardIssNum = None
    PaymentDate = None
    PaymentRemitterID = None
  }


let MkNoTrdRegTimestampsGrp (trdRegTimestamp:TrdRegTimestamp) : NoTrdRegTimestampsGrp = {
    TrdRegTimestamp = trdRegTimestamp
    TrdRegTimestampType = None
    TrdRegTimestampOrigin = None
  }


let MkTrdRegTimestamps (noTrdRegTimestampsGrp:NoTrdRegTimestampsGrp list) : TrdRegTimestamps = {
    NoTrdRegTimestampsGrp = noTrdRegTimestampsGrp
  }


let MkAllocationReportNoAllocsGrp (allocAccount:AllocAccount, allocQty:AllocQty, commissionData:CommissionData, settlInstructionsData:SettlInstructionsData) : AllocationReportNoAllocsGrp = {
    AllocAccount = allocAccount
    AllocAcctIDSource = None
    MatchStatus = None
    AllocPrice = None
    AllocQty = allocQty
    IndividualAllocID = None
    ProcessCode = None
    NoNestedPartyIDsGrp = None
    NotifyBrokerOfCredit = None
    AllocHandlInst = None
    AllocText = None
    EncodedAllocText = None
    CommissionData = commissionData
    AllocAvgPx = None
    AllocNetMoney = None
    SettlCurrAmt = None
    AllocSettlCurrAmt = None
    SettlCurrency = None
    AllocSettlCurrency = None
    SettlCurrFxRate = None
    SettlCurrFxRateCalc = None
    AllocAccruedInterestAmt = None
    AllocInterestAtMaturity = None
    NoMiscFeesGrp = None
    NoClearingInstructionsGrp = None
    ClearingFeeIndicator = None
    AllocSettlInstType = None
    SettlInstructionsData = settlInstructionsData
  }


let MkAllocationInstructionNoAllocsGrp (allocAccount:AllocAccount, allocQty:AllocQty, commissionData:CommissionData, settlInstructionsData:SettlInstructionsData) : AllocationInstructionNoAllocsGrp = {
    AllocAccount = allocAccount
    AllocAcctIDSource = None
    MatchStatus = None
    AllocPrice = None
    AllocQty = allocQty
    IndividualAllocID = None
    ProcessCode = None
    NoNestedPartyIDsGrp = None
    NotifyBrokerOfCredit = None
    AllocHandlInst = None
    AllocText = None
    EncodedAllocText = None
    CommissionData = commissionData
    AllocAvgPx = None
    AllocNetMoney = None
    SettlCurrAmt = None
    AllocSettlCurrAmt = None
    SettlCurrency = None
    AllocSettlCurrency = None
    SettlCurrFxRate = None
    SettlCurrFxRateCalc = None
    AccruedInterestAmt = None
    AllocAccruedInterestAmt = None
    AllocInterestAtMaturity = None
    SettlInstMode = None
    NoMiscFeesGrp = None
    NoClearingInstructions = None
    ClearingInstruction = None
    ClearingFeeIndicator = None
    AllocSettlInstType = None
    SettlInstructionsData = settlInstructionsData
  }


let MkSettlParties () : SettlParties = {
    NoSettlPartyIDsGrp = None
  }


let MkNoOrdersGrp (clOrdID:ClOrdID) : NoOrdersGrp = {
    ClOrdID = clOrdID
    OrderID = None
    SecondaryOrderID = None
    SecondaryClOrdID = None
    ListID = None
    NoNested2PartyIDsGrp = None
    OrderQty = None
    OrderAvgPx = None
    OrderBookingQty = None
  }


let MkListStrikePriceNoUnderlyingsGrp (underlyingInstrument:UnderlyingInstrument, price:Price) : ListStrikePriceNoUnderlyingsGrp = {
    UnderlyingInstrument = underlyingInstrument
    PrevClosePx = None
    ClOrdID = None
    SecondaryClOrdID = None
    Side = None
    Price = price
    Currency = None
    Text = None
    EncodedText = None
  }


let MkNoSecurityAltIDGrp (securityAltID:SecurityAltID) : NoSecurityAltIDGrp = {
    SecurityAltID = securityAltID
    SecurityAltIDSource = None
  }


let MkNoEventsGrp (eventType:EventType) : NoEventsGrp = {
    EventType = eventType
    EventDate = None
    EventPx = None
    EventText = None
  }


let MkInstrument (symbol:Symbol) : Instrument = {
    Symbol = symbol
    SymbolSfx = None
    SecurityID = None
    SecurityIDSource = None
    NoSecurityAltIDGrp = None
    Product = None
    CFICode = None
    SecurityType = None
    SecuritySubType = None
    MaturityMonthYear = None
    MaturityDate = None
    PutOrCall = None
    CouponPaymentDate = None
    IssueDate = None
    RepoCollateralSecurityType = None
    RepurchaseTerm = None
    RepurchaseRate = None
    Factor = None
    CreditRating = None
    InstrRegistry = None
    CountryOfIssue = None
    StateOrProvinceOfIssue = None
    LocaleOfIssue = None
    RedemptionDate = None
    StrikePrice = None
    StrikeCurrency = None
    OptAttribute = None
    ContractMultiplier = None
    CouponRate = None
    SecurityExchange = None
    Issuer = None
    EncodedIssuer = None
    SecurityDesc = None
    EncodedSecurityDesc = None
    Pool = None
    ContractSettlMonth = None
    CPProgram = None
    CPRegType = None
    NoEventsGrp = None
    DatedDate = None
    InterestAccrualDate = None
  }


let MkNoStrikesGrp (instrument:Instrument) : NoStrikesGrp = {
    Instrument = instrument
  }


let MkNoAllocsGrp (allocAccount:AllocAccount) : NoAllocsGrp = {
    AllocAccount = allocAccount
    AllocAcctIDSource = None
    AllocSettlCurrency = None
    IndividualAllocID = None
    NoNestedPartyIDsGrp = None
    AllocQty = None
  }


let MkNoTradingSessionsGrp (tradingSessionID:TradingSessionID) : NoTradingSessionsGrp = {
    TradingSessionID = tradingSessionID
    TradingSessionSubID = None
  }


let MkNoUnderlyingsGrp (underlyingInstrument:UnderlyingInstrument) : NoUnderlyingsGrp = {
    UnderlyingInstrument = underlyingInstrument
  }


let MkOrderQtyData () : OrderQtyData = {
    OrderQty = None
    CashOrderQty = None
    OrderPercent = None
    RoundingDirection = None
    RoundingModulus = None
  }


let MkSpreadOrBenchmarkCurveData () : SpreadOrBenchmarkCurveData = {
    Spread = None
    BenchmarkCurveCurrency = None
    BenchmarkCurveName = None
    BenchmarkCurvePoint = None
    BenchmarkPrice = None
    BenchmarkPriceType = None
    BenchmarkSecurityID = None
    BenchmarkSecurityIDSource = None
  }


let MkYieldData () : YieldData = {
    YieldType = None
    Yield = None
    YieldCalcDate = None
    YieldRedemptionDate = None
    YieldRedemptionPrice = None
    YieldRedemptionPriceType = None
  }


let MkPegInstructions () : PegInstructions = {
    PegOffsetValue = None
    PegMoveType = None
    PegOffsetType = None
    PegLimitType = None
    PegRoundDirection = None
    PegScope = None
  }


let MkDiscretionInstructions () : DiscretionInstructions = {
    DiscretionInst = None
    DiscretionOffsetValue = None
    DiscretionMoveType = None
    DiscretionOffsetType = None
    DiscretionLimitType = None
    DiscretionRoundDirection = None
    DiscretionScope = None
  }


let MkNewOrderListNoOrdersGrp (clOrdID:ClOrdID, listSeqNo:ListSeqNo, instrument:Instrument, side:Side, orderQtyData:OrderQtyData, spreadOrBenchmarkCurveData:SpreadOrBenchmarkCurveData, yieldData:YieldData, commissionData:CommissionData, pegInstructions:PegInstructions, discretionInstructions:DiscretionInstructions) : NewOrderListNoOrdersGrp = {
    ClOrdID = clOrdID
    SecondaryClOrdID = None
    ListSeqNo = listSeqNo
    ClOrdLinkID = None
    SettlInstMode = None
    NoPartyIDsGrp = None
    TradeOriginationDate = None
    TradeDate = None
    Account = None
    AcctIDSource = None
    AccountType = None
    DayBookingInst = None
    BookingUnit = None
    AllocID = None
    PreallocMethod = None
    NoAllocsGrp = None
    SettlType = None
    SettlDate = None
    CashMargin = None
    ClearingFeeIndicator = None
    HandlInst = None
    ExecInst = None
    MinQty = None
    MaxFloor = None
    ExDestination = None
    NoTradingSessionsGrp = None
    ProcessCode = None
    Instrument = instrument
    NoUnderlyingsGrp = None
    PrevClosePx = None
    Side = side
    SideValueInd = None
    LocateReqd = None
    TransactTime = None
    NoStipulationsGrp = None
    QtyType = None
    OrderQtyData = orderQtyData
    OrdType = None
    PriceType = None
    Price = None
    StopPx = None
    SpreadOrBenchmarkCurveData = spreadOrBenchmarkCurveData
    YieldData = yieldData
    Currency = None
    ComplianceID = None
    SolicitedFlag = None
    IOIID = None
    QuoteID = None
    TimeInForce = None
    EffectiveTime = None
    ExpireDate = None
    ExpireTime = None
    GTBookingInst = None
    CommissionData = commissionData
    OrderCapacity = None
    OrderRestrictions = None
    CustOrderCapacity = None
    ForexReq = None
    SettlCurrency = None
    BookingType = None
    Text = None
    EncodedText = None
    SettlDate2 = None
    OrderQty2 = None
    Price2 = None
    PositionEffect = None
    CoveredOrUncovered = None
    MaxShow = None
    PegInstructions = pegInstructions
    DiscretionInstructions = discretionInstructions
    TargetStrategy = None
    TargetStrategyParameters = None
    ParticipationRate = None
    Designation = None
  }


let MkCommissionDataFG (commission:Commission) : CommissionDataFG = {
    Commission = commission
    CommType = None
    CommCurrency = None
    FundRenewWaiv = None
  }


let MkBidResponseNoBidComponentsGrp (commissionDataFG:CommissionDataFG) : BidResponseNoBidComponentsGrp = {
    CommissionDataFG = commissionDataFG
    ListID = None
    Country = None
    Side = None
    Price = None
    PriceType = None
    FairValue = None
    NetGrossInd = None
    SettlType = None
    SettlDate = None
    TradingSessionID = None
    TradingSessionSubID = None
    Text = None
    EncodedText = None
  }


let MkNoLegAllocsGrp (legAllocAccount:LegAllocAccount) : NoLegAllocsGrp = {
    LegAllocAccount = legAllocAccount
    LegIndividualAllocID = None
    NoNested2PartyIDsGrp = None
    LegAllocQty = None
    LegAllocAcctIDSource = None
    LegSettlCurrency = None
  }


let MkMultilegOrderCancelReplaceRequestNoLegsGrp (instrumentLegFG:InstrumentLegFG) : MultilegOrderCancelReplaceRequestNoLegsGrp = {
    InstrumentLegFG = instrumentLegFG
    LegQty = None
    LegSwapType = None
    NoLegStipulationsGrp = None
    NoLegAllocsGrp = None
    LegPositionEffect = None
    LegCoveredOrUncovered = None
    NoNestedPartyIDsGrp = None
    LegRefID = None
    LegPrice = None
    LegSettlType = None
    LegSettlDate = None
  }


let MkNoNested3PartySubIDsGrp (nested3PartySubID:Nested3PartySubID) : NoNested3PartySubIDsGrp = {
    Nested3PartySubID = nested3PartySubID
    Nested3PartySubIDType = None
  }


let MkNoNested3PartyIDsGrp (nested3PartyID:Nested3PartyID) : NoNested3PartyIDsGrp = {
    Nested3PartyID = nested3PartyID
    Nested3PartyIDSource = None
    Nested3PartyRole = None
    NoNested3PartySubIDsGrp = None
  }


let MkMultilegOrderCancelReplaceRequestNoAllocsGrp (allocAccount:AllocAccount) : MultilegOrderCancelReplaceRequestNoAllocsGrp = {
    AllocAccount = allocAccount
    AllocAcctIDSource = None
    AllocSettlCurrency = None
    IndividualAllocID = None
    NoNested3PartyIDsGrp = None
    AllocQty = None
  }


let MkNewOrderMultilegNoLegsGrp (instrumentLegFG:InstrumentLegFG) : NewOrderMultilegNoLegsGrp = {
    InstrumentLegFG = instrumentLegFG
    LegQty = None
    LegSwapType = None
    NoLegStipulationsGrp = None
    NoLegAllocsGrp = None
    LegPositionEffect = None
    LegCoveredOrUncovered = None
    NoNestedPartyIDsGrp = None
    LegRefID = None
    LegPrice = None
    LegSettlType = None
    LegSettlDate = None
  }


let MkNestedParties2 () : NestedParties2 = {
    NoNested2PartyIDsGrp = None
  }


let MkNewOrderMultilegNoAllocsGrp (allocAccount:AllocAccount) : NewOrderMultilegNoAllocsGrp = {
    AllocAccount = allocAccount
    AllocAcctIDSource = None
    AllocSettlCurrency = None
    IndividualAllocID = None
    NoNested3PartyIDsGrp = None
    AllocQty = None
  }


let MkNestedParties3 () : NestedParties3 = {
    NoNested3PartyIDsGrp = None
  }


let MkCrossOrderCancelRequestNoSidesGrp (side:Side, origClOrdID:OrigClOrdID, clOrdID:ClOrdID, orderQtyData:OrderQtyData) : CrossOrderCancelRequestNoSidesGrp = {
    Side = side
    OrigClOrdID = origClOrdID
    ClOrdID = clOrdID
    SecondaryClOrdID = None
    ClOrdLinkID = None
    OrigOrdModTime = None
    NoPartyIDsGrp = None
    TradeOriginationDate = None
    TradeDate = None
    OrderQtyData = orderQtyData
    ComplianceID = None
    Text = None
    EncodedText = None
  }


let MkCrossOrderCancelReplaceRequestNoSidesGrp (side:Side, origClOrdID:OrigClOrdID, clOrdID:ClOrdID, orderQtyData:OrderQtyData, commissionData:CommissionData) : CrossOrderCancelReplaceRequestNoSidesGrp = {
    Side = side
    OrigClOrdID = origClOrdID
    ClOrdID = clOrdID
    SecondaryClOrdID = None
    ClOrdLinkID = None
    OrigOrdModTime = None
    NoPartyIDsGrp = None
    TradeOriginationDate = None
    TradeDate = None
    Account = None
    AcctIDSource = None
    AccountType = None
    DayBookingInst = None
    BookingUnit = None
    PreallocMethod = None
    AllocID = None
    NoAllocsGrp = None
    QtyType = None
    OrderQtyData = orderQtyData
    CommissionData = commissionData
    OrderCapacity = None
    OrderRestrictions = None
    CustOrderCapacity = None
    ForexReq = None
    SettlCurrency = None
    BookingType = None
    Text = None
    EncodedText = None
    PositionEffect = None
    CoveredOrUncovered = None
    CashMargin = None
    ClearingFeeIndicator = None
    SolicitedFlag = None
    SideComplianceID = None
  }


let MkNoSidesGrp (side:Side, clOrdID:ClOrdID, orderQtyData:OrderQtyData, commissionData:CommissionData) : NoSidesGrp = {
    Side = side
    ClOrdID = clOrdID
    SecondaryClOrdID = None
    ClOrdLinkID = None
    NoPartyIDsGrp = None
    TradeOriginationDate = None
    TradeDate = None
    Account = None
    AcctIDSource = None
    AccountType = None
    DayBookingInst = None
    BookingUnit = None
    PreallocMethod = None
    AllocID = None
    NoAllocsGrp = None
    QtyType = None
    OrderQtyData = orderQtyData
    CommissionData = commissionData
    OrderCapacity = None
    OrderRestrictions = None
    CustOrderCapacity = None
    ForexReq = None
    SettlCurrency = None
    BookingType = None
    Text = None
    EncodedText = None
    PositionEffect = None
    CoveredOrUncovered = None
    CashMargin = None
    ClearingFeeIndicator = None
    SolicitedFlag = None
    SideComplianceID = None
  }


let MkExecutionReportNoLegsGrp (instrumentLegFG:InstrumentLegFG) : ExecutionReportNoLegsGrp = {
    InstrumentLegFG = instrumentLegFG
    LegQty = None
    LegSwapType = None
    NoLegStipulationsGrp = None
    LegPositionEffect = None
    LegCoveredOrUncovered = None
    NoNestedPartyIDsGrp = None
    LegRefID = None
    LegPrice = None
    LegSettlType = None
    LegSettlDate = None
    LegLastPx = None
  }


let MkNoInstrAttribGrp (instrAttribType:InstrAttribType) : NoInstrAttribGrp = {
    InstrAttribType = instrAttribType
    InstrAttribValue = None
  }


let MkInstrumentExtension () : InstrumentExtension = {
    DeliveryForm = None
    PctAtRisk = None
    NoInstrAttribGrp = None
  }


let MkNoLegsGrp (instrumentLegFG:InstrumentLegFG) : NoLegsGrp = {
    InstrumentLegFG = instrumentLegFG
  }


let MkDerivativeSecurityListNoRelatedSymGrp (instrument:Instrument, instrumentExtension:InstrumentExtension) : DerivativeSecurityListNoRelatedSymGrp = {
    Instrument = instrument
    Currency = None
    ExpirationCycle = None
    InstrumentExtension = instrumentExtension
    NoLegsGrp = None
    TradingSessionID = None
    TradingSessionSubID = None
    Text = None
    EncodedText = None
  }


let MkFinancingDetails () : FinancingDetails = {
    AgreementDesc = None
    AgreementID = None
    AgreementDate = None
    AgreementCurrency = None
    TerminationType = None
    StartDate = None
    EndDate = None
    DeliveryType = None
    MarginRatio = None
  }


let MkLegBenchmarkCurveData () : LegBenchmarkCurveData = {
    LegBenchmarkCurveCurrency = None
    LegBenchmarkCurveName = None
    LegBenchmarkCurvePoint = None
    LegBenchmarkPrice = None
    LegBenchmarkPriceType = None
  }


let MkSecurityListNoLegsGrp (instrumentLegFG:InstrumentLegFG, legBenchmarkCurveData:LegBenchmarkCurveData) : SecurityListNoLegsGrp = {
    InstrumentLegFG = instrumentLegFG
    LegSwapType = None
    LegSettlType = None
    NoLegStipulationsGrp = None
    LegBenchmarkCurveData = legBenchmarkCurveData
  }


let MkSecurityListNoRelatedSymGrp (instrument:Instrument, instrumentExtension:InstrumentExtension, financingDetails:FinancingDetails, spreadOrBenchmarkCurveData:SpreadOrBenchmarkCurveData, yieldData:YieldData) : SecurityListNoRelatedSymGrp = {
    Instrument = instrument
    InstrumentExtension = instrumentExtension
    FinancingDetails = financingDetails
    NoUnderlyingsGrp = None
    Currency = None
    NoStipulationsGrp = None
    SecurityListNoLegsGrp = None
    SpreadOrBenchmarkCurveData = spreadOrBenchmarkCurveData
    YieldData = yieldData
    RoundLot = None
    MinTradeVol = None
    TradingSessionID = None
    TradingSessionSubID = None
    ExpirationCycle = None
    Text = None
    EncodedText = None
  }


let MkMarketDataIncrementalRefreshNoMDEntriesGrp (mDUpdateAction:MDUpdateAction) : MarketDataIncrementalRefreshNoMDEntriesGrp = {
    MDUpdateAction = mDUpdateAction
    DeleteReason = None
    MDEntryType = None
    MDEntryID = None
    MDEntryRefID = None
    Instrument = None
    NoUnderlyingsGrp = None
    NoLegsGrp = None
    FinancialStatus = None
    CorporateAction = None
    MDEntryPx = None
    Currency = None
    MDEntrySize = None
    MDEntryDate = None
    MDEntryTime = None
    TickDirection = None
    MDMkt = None
    TradingSessionID = None
    TradingSessionSubID = None
    QuoteCondition = None
    TradeCondition = None
    MDEntryOriginator = None
    LocationID = None
    DeskID = None
    OpenCloseSettlFlag = None
    TimeInForce = None
    ExpireDate = None
    ExpireTime = None
    MinQty = None
    ExecInst = None
    SellerDays = None
    OrderID = None
    QuoteEntryID = None
    MDEntryBuyer = None
    MDEntrySeller = None
    NumberOfOrders = None
    MDEntryPositionNo = None
    Scope = None
    PriceDelta = None
    NetChgPrevDay = None
    Text = None
    EncodedText = None
  }


let MkMarketDataRequestNoRelatedSymGrp (instrument:Instrument) : MarketDataRequestNoRelatedSymGrp = {
    Instrument = instrument
    NoUnderlyingsGrp = None
    NoLegsGrp = None
  }


let MkMassQuoteAcknowledgementNoQuoteEntriesGrp (quoteEntryID:QuoteEntryID) : MassQuoteAcknowledgementNoQuoteEntriesGrp = {
    QuoteEntryID = quoteEntryID
    Instrument = None
    NoLegsGrp = None
    BidPx = None
    OfferPx = None
    BidSize = None
    OfferSize = None
    ValidUntilTime = None
    BidSpotRate = None
    OfferSpotRate = None
    BidForwardPoints = None
    OfferForwardPoints = None
    MidPx = None
    BidYield = None
    MidYield = None
    OfferYield = None
    TransactTime = None
    TradingSessionID = None
    TradingSessionSubID = None
    SettlDate = None
    OrdType = None
    SettlDate2 = None
    OrderQty2 = None
    BidForwardPoints2 = None
    OfferForwardPoints2 = None
    Currency = None
    QuoteEntryRejectReason = None
  }


let MkMassQuoteAcknowledgementNoQuoteSetsGrp (quoteSetID:QuoteSetID) : MassQuoteAcknowledgementNoQuoteSetsGrp = {
    QuoteSetID = quoteSetID
    UnderlyingInstrument = None
    TotNoQuoteEntries = None
    LastFragment = None
    MassQuoteAcknowledgementNoQuoteEntriesGrp = None
  }


let MkMassQuoteNoQuoteEntriesGrp (quoteEntryID:QuoteEntryID) : MassQuoteNoQuoteEntriesGrp = {
    QuoteEntryID = quoteEntryID
    Instrument = None
    NoLegsGrp = None
    BidPx = None
    OfferPx = None
    BidSize = None
    OfferSize = None
    ValidUntilTime = None
    BidSpotRate = None
    OfferSpotRate = None
    BidForwardPoints = None
    OfferForwardPoints = None
    MidPx = None
    BidYield = None
    MidYield = None
    OfferYield = None
    TransactTime = None
    TradingSessionID = None
    TradingSessionSubID = None
    SettlDate = None
    OrdType = None
    SettlDate2 = None
    OrderQty2 = None
    BidForwardPoints2 = None
    OfferForwardPoints2 = None
    Currency = None
  }


let MkNoQuoteSetsGrp (quoteSetID:QuoteSetID, totNoQuoteEntries:TotNoQuoteEntries, massQuoteNoQuoteEntriesGrp:MassQuoteNoQuoteEntriesGrp list) : NoQuoteSetsGrp = {
    QuoteSetID = quoteSetID
    UnderlyingInstrument = None
    QuoteSetValidUntilTime = None
    TotNoQuoteEntries = totNoQuoteEntries
    LastFragment = None
    MassQuoteNoQuoteEntriesGrp = massQuoteNoQuoteEntriesGrp
  }


let MkQuoteStatusReportNoLegsGrp (instrumentLegFG:InstrumentLegFG) : QuoteStatusReportNoLegsGrp = {
    InstrumentLegFG = instrumentLegFG
    LegQty = None
    LegSwapType = None
    LegSettlType = None
    LegSettlDate = None
    NoLegStipulationsGrp = None
    NoNestedPartyIDsGrp = None
  }


let MkNoQuoteEntriesGrp (instrument:Instrument, financingDetails:FinancingDetails) : NoQuoteEntriesGrp = {
    Instrument = instrument
    FinancingDetails = financingDetails
    NoUnderlyingsGrp = None
    NoLegsGrp = None
  }


let MkQuoteNoLegsGrp (instrumentLegFG:InstrumentLegFG, legBenchmarkCurveData:LegBenchmarkCurveData) : QuoteNoLegsGrp = {
    InstrumentLegFG = instrumentLegFG
    LegQty = None
    LegSwapType = None
    LegSettlType = None
    LegSettlDate = None
    NoLegStipulationsGrp = None
    NoNestedPartyIDsGrp = None
    LegPriceType = None
    LegBidPx = None
    LegOfferPx = None
    LegBenchmarkCurveData = legBenchmarkCurveData
  }


let MkRFQRequestNoRelatedSymGrp (instrument:Instrument) : RFQRequestNoRelatedSymGrp = {
    Instrument = instrument
    NoUnderlyingsGrp = None
    NoLegsGrp = None
    PrevClosePx = None
    QuoteRequestType = None
    QuoteType = None
    TradingSessionID = None
    TradingSessionSubID = None
  }


let MkQuoteRequestRejectNoLegsGrp (instrumentLegFG:InstrumentLegFG, legBenchmarkCurveData:LegBenchmarkCurveData) : QuoteRequestRejectNoLegsGrp = {
    InstrumentLegFG = instrumentLegFG
    LegQty = None
    LegSwapType = None
    LegSettlType = None
    LegSettlDate = None
    NoLegStipulationsGrp = None
    NoNestedPartyIDsGrp = None
    LegBenchmarkCurveData = legBenchmarkCurveData
  }


let MkQuoteRequestRejectNoRelatedSymGrp (instrument:Instrument, financingDetails:FinancingDetails, orderQtyData:OrderQtyData) : QuoteRequestRejectNoRelatedSymGrp = {
    Instrument = instrument
    FinancingDetails = financingDetails
    NoUnderlyingsGrp = None
    PrevClosePx = None
    QuoteRequestType = None
    QuoteType = None
    TradingSessionID = None
    TradingSessionSubID = None
    TradeOriginationDate = None
    Side = None
    QtyType = None
    OrderQtyData = orderQtyData
    SettlType = None
    SettlDate = None
    SettlDate2 = None
    OrderQty2 = None
    Currency = None
    NoStipulationsGrp = None
    Account = None
    AcctIDSource = None
    AccountType = None
    QuoteRequestRejectNoLegsGrp = None
  }


let MkQuoteResponseNoLegsGrp (instrumentLegFG:InstrumentLegFG, legBenchmarkCurveData:LegBenchmarkCurveData) : QuoteResponseNoLegsGrp = {
    InstrumentLegFG = instrumentLegFG
    LegQty = None
    LegSwapType = None
    LegSettlType = None
    LegSettlDate = None
    NoLegStipulationsGrp = None
    NoNestedPartyIDsGrp = None
    LegPriceType = None
    LegBidPx = None
    LegOfferPx = None
    LegBenchmarkCurveData = legBenchmarkCurveData
  }


let MkQuoteRequestNoLegsGrp (instrumentLegFG:InstrumentLegFG, legBenchmarkCurveData:LegBenchmarkCurveData) : QuoteRequestNoLegsGrp = {
    InstrumentLegFG = instrumentLegFG
    LegQty = None
    LegSwapType = None
    LegSettlType = None
    LegSettlDate = None
    NoLegStipulationsGrp = None
    NoNestedPartyIDsGrp = None
    LegBenchmarkCurveData = legBenchmarkCurveData
  }


let MkNoQuoteQualifiersGrp (quoteQualifier:QuoteQualifier) : NoQuoteQualifiersGrp = {
    QuoteQualifier = quoteQualifier
  }


let MkQuoteRequestNoRelatedSymGrp (instrument:Instrument, financingDetails:FinancingDetails, orderQtyData:OrderQtyData, spreadOrBenchmarkCurveData:SpreadOrBenchmarkCurveData, yieldData:YieldData) : QuoteRequestNoRelatedSymGrp = {
    Instrument = instrument
    FinancingDetails = financingDetails
    NoUnderlyingsGrp = None
    PrevClosePx = None
    QuoteRequestType = None
    QuoteType = None
    TradingSessionID = None
    TradingSessionSubID = None
    TradeOriginationDate = None
    Side = None
    QtyType = None
    OrderQtyData = orderQtyData
    SettlType = None
    SettlDate = None
    SettlDate2 = None
    OrderQty2 = None
    Currency = None
    NoStipulationsGrp = None
    Account = None
    AcctIDSource = None
    AccountType = None
    QuoteRequestNoLegsGrp = None
    NoQuoteQualifiersGrp = None
    QuotePriceType = None
    OrdType = None
    ValidUntilTime = None
    ExpireTime = None
    TransactTime = None
    SpreadOrBenchmarkCurveData = spreadOrBenchmarkCurveData
    PriceType = None
    Price = None
    Price2 = None
    YieldData = yieldData
    NoPartyIDsGrp = None
  }


let MkParties () : Parties = {
    NoPartyIDsGrp = None
  }


let MkNestedParties () : NestedParties = {
    NoNestedPartyIDsGrp = None
  }


let MkNoRelatedSymGrp (instrument:Instrument) : NoRelatedSymGrp = {
    Instrument = instrument
  }


let MkIndicationOfInterestNoLegsGrp (instrumentLegFG:InstrumentLegFG) : IndicationOfInterestNoLegsGrp = {
    InstrumentLegFG = instrumentLegFG
    LegIOIQty = None
    NoLegStipulationsGrp = None
  }


let MkLegStipulations () : LegStipulations = {
    NoLegStipulationsGrp = None
  }


let MkStipulations () : Stipulations = {
    NoStipulationsGrp = None
  }


let MkAdvertisementNoUnderlyingsGrp (underlyingInstrument:UnderlyingInstrument) : AdvertisementNoUnderlyingsGrp = {
    UnderlyingInstrument = underlyingInstrument
  }


let MkUnderlyingStipulations () : UnderlyingStipulations = {
    NoUnderlyingStipsGrp = None
  }


let MkInstrumentLeg () : InstrumentLeg = {
    LegSymbol = None
    LegSymbolSfx = None
    LegSecurityID = None
    LegSecurityIDSource = None
    NoLegSecurityAltIDGrp = None
    LegProduct = None
    LegCFICode = None
    LegSecurityType = None
    LegSecuritySubType = None
    LegMaturityMonthYear = None
    LegMaturityDate = None
    LegCouponPaymentDate = None
    LegIssueDate = None
    LegRepoCollateralSecurityType = None
    LegRepurchaseTerm = None
    LegRepurchaseRate = None
    LegFactor = None
    LegCreditRating = None
    LegInstrRegistry = None
    LegCountryOfIssue = None
    LegStateOrProvinceOfIssue = None
    LegLocaleOfIssue = None
    LegRedemptionDate = None
    LegStrikePrice = None
    LegStrikeCurrency = None
    LegOptAttribute = None
    LegContractMultiplier = None
    LegCouponRate = None
    LegSecurityExchange = None
    LegIssuer = None
    EncodedLegIssuer = None
    LegSecurityDesc = None
    EncodedLegSecurityDesc = None
    LegRatioQty = None
    LegSide = None
    LegCurrency = None
    LegPool = None
    LegDatedDate = None
    LegContractSettlMonth = None
    LegInterestAccrualDate = None
  }


let MkNoMsgTypesGrp (refMsgType:RefMsgType) : NoMsgTypesGrp = {
    RefMsgType = refMsgType
    MsgDirection = None
  }


let MkNoIOIQualifiersGrp (iOIQualifier:IOIQualifier) : NoIOIQualifiersGrp = {
    IOIQualifier = iOIQualifier
  }


let MkNoRoutingIDsGrp (routingType:RoutingType) : NoRoutingIDsGrp = {
    RoutingType = routingType
    RoutingID = None
  }


let MkLinesOfTextGrp (text:Text) : LinesOfTextGrp = {
    Text = text
    EncodedText = None
  }


let MkNoMDEntryTypesGrp (mDEntryType:MDEntryType) : NoMDEntryTypesGrp = {
    MDEntryType = mDEntryType
  }


let MkNoMDEntriesGrp (mDEntryType:MDEntryType) : NoMDEntriesGrp = {
    MDEntryType = mDEntryType
    MDEntryPx = None
    Currency = None
    MDEntrySize = None
    MDEntryDate = None
    MDEntryTime = None
    TickDirection = None
    MDMkt = None
    TradingSessionID = None
    TradingSessionSubID = None
    QuoteCondition = None
    TradeCondition = None
    MDEntryOriginator = None
    LocationID = None
    DeskID = None
    OpenCloseSettlFlag = None
    TimeInForce = None
    ExpireDate = None
    ExpireTime = None
    MinQty = None
    ExecInst = None
    SellerDays = None
    OrderID = None
    QuoteEntryID = None
    MDEntryBuyer = None
    MDEntrySeller = None
    NumberOfOrders = None
    MDEntryPositionNo = None
    Scope = None
    PriceDelta = None
    Text = None
    EncodedText = None
  }


let MkNoAltMDSourceGrp (altMDSourceID:AltMDSourceID) : NoAltMDSourceGrp = {
    AltMDSourceID = altMDSourceID
  }


let MkNoSecurityTypesGrp (securityType:SecurityType) : NoSecurityTypesGrp = {
    SecurityType = securityType
    SecuritySubType = None
    Product = None
    CFICode = None
  }


let MkNoContraBrokersGrp (contraBroker:ContraBroker) : NoContraBrokersGrp = {
    ContraBroker = contraBroker
    ContraTrader = None
    ContraTradeQty = None
    ContraTradeTime = None
    ContraLegRefID = None
  }


let MkNoAffectedOrdersGrp (origClOrdID:OrigClOrdID) : NoAffectedOrdersGrp = {
    OrigClOrdID = origClOrdID
    AffectedOrderID = None
    AffectedSecondaryOrderID = None
  }


let MkNoBidDescriptorsGrp (bidDescriptorType:BidDescriptorType) : NoBidDescriptorsGrp = {
    BidDescriptorType = bidDescriptorType
    BidDescriptor = None
    SideValueInd = None
    LiquidityValue = None
    LiquidityNumSecurities = None
    LiquidityPctLow = None
    LiquidityPctHigh = None
    EFPTrackingError = None
    FairValue = None
    OutsideIndexPct = None
    ValueOfFutures = None
  }


let MkNoBidComponentsGrp (listID:ListID) : NoBidComponentsGrp = {
    ListID = listID
    Side = None
    TradingSessionID = None
    TradingSessionSubID = None
    NetGrossInd = None
    SettlType = None
    SettlDate = None
    Account = None
    AcctIDSource = None
  }


let MkListStatusNoOrdersGrp (clOrdID:ClOrdID, cumQty:CumQty, ordStatus:OrdStatus, leavesQty:LeavesQty, cxlQty:CxlQty, avgPx:AvgPx) : ListStatusNoOrdersGrp = {
    ClOrdID = clOrdID
    SecondaryClOrdID = None
    CumQty = cumQty
    OrdStatus = ordStatus
    WorkingIndicator = None
    LeavesQty = leavesQty
    CxlQty = cxlQty
    AvgPx = avgPx
    OrdRejReason = None
    Text = None
    EncodedText = None
  }


let MkAllocationInstructionNoExecsGrp (lastQty:LastQty) : AllocationInstructionNoExecsGrp = {
    LastQty = lastQty
    ExecID = None
    SecondaryExecID = None
    LastPx = None
    LastParPx = None
    LastCapacity = None
  }


let MkAllocationInstructionAckNoAllocsGrp (allocAccount:AllocAccount) : AllocationInstructionAckNoAllocsGrp = {
    AllocAccount = allocAccount
    AllocAcctIDSource = None
    AllocPrice = None
    IndividualAllocID = None
    IndividualAllocRejCode = None
    AllocText = None
    EncodedAllocText = None
  }


let MkAllocationReportNoExecsGrp (lastQty:LastQty) : AllocationReportNoExecsGrp = {
    LastQty = lastQty
    ExecID = None
    SecondaryExecID = None
    LastPx = None
    LastParPx = None
    LastCapacity = None
  }


let MkAllocationReportAckNoAllocsGrp (allocAccount:AllocAccount) : AllocationReportAckNoAllocsGrp = {
    AllocAccount = allocAccount
    AllocAcctIDSource = None
    AllocPrice = None
    IndividualAllocID = None
    IndividualAllocRejCode = None
    AllocText = None
    EncodedAllocText = None
  }


let MkNoCapacitiesGrp (orderCapacity:OrderCapacity, orderCapacityQty:OrderCapacityQty) : NoCapacitiesGrp = {
    OrderCapacity = orderCapacity
    OrderRestrictions = None
    OrderCapacityQty = orderCapacityQty
  }


let MkNoDatesGrp (tradeDate:TradeDate) : NoDatesGrp = {
    TradeDate = tradeDate
    TransactTime = None
  }


let MkNoDistribInstsGrp (distribPaymentMethod:DistribPaymentMethod) : NoDistribInstsGrp = {
    DistribPaymentMethod = distribPaymentMethod
    DistribPercentage = None
    CashDistribCurr = None
    CashDistribAgentName = None
    CashDistribAgentCode = None
    CashDistribAgentAcctNumber = None
    CashDistribPayRef = None
    CashDistribAgentAcctName = None
  }


let MkNoExecsGrp (execID:ExecID) : NoExecsGrp = {
    ExecID = execID
  }


let MkNoTradesGrp (tradeReportID:TradeReportID) : NoTradesGrp = {
    TradeReportID = tradeReportID
    SecondaryTradeReportID = None
  }


let MkNoCollInquiryQualifierGrp (collInquiryQualifier:CollInquiryQualifier) : NoCollInquiryQualifierGrp = {
    CollInquiryQualifier = collInquiryQualifier
  }


let MkNoCompIDsGrp (refCompID:RefCompID) : NoCompIDsGrp = {
    RefCompID = refCompID
    RefSubID = None
    LocationID = None
    DeskID = None
  }


let MkNetworkStatusResponseNoCompIDsGrp (refCompID:RefCompID) : NetworkStatusResponseNoCompIDsGrp = {
    RefCompID = refCompID
    RefSubID = None
    LocationID = None
    DeskID = None
    StatusValue = None
    StatusText = None
  }


let MkNoHopsGrp (hopCompID:HopCompID) : NoHopsGrp = {
    HopCompID = hopCompID
    HopSendingTime = None
    HopRefID = None
  }
