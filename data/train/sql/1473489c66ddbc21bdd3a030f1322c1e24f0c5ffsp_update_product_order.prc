USE [SnackOverflowDB]
GO
IF EXISTS(SELECT * FROM sys.objects WHERE type = 'P' AND  name = 'sp_update_product_order')
BEGIN
DROP PROCEDURE sp_update_product_order
Print '' print  ' *** dropping procedure sp_update_product_order'
End
GO

Print '' print  ' *** creating procedure sp_update_product_order'
GO
Create PROCEDURE sp_update_product_order
(
@old_ORDER_ID[INT],
@old_CUSTOMER_ID[INT],
@new_CUSTOMER_ID[INT],
@old_ORDER_TYPE_ID[NVARCHAR](250),
@new_ORDER_TYPE_ID[NVARCHAR](250),
@old_ADDRESS_TYPE[NVARCHAR],
@new_ADDRESS_TYPE[NVARCHAR],
@old_DELIVERY_TYPE_ID[NVARCHAR](50),
@new_DELIVERY_TYPE_ID[NVARCHAR](50),
@old_AMOUNT[DECIMAL](6,2),
@new_AMOUNT[DECIMAL](6,2),
@old_ORDER_DATE[DATETIME],
@new_ORDER_DATE[DATETIME],
@old_DATE_EXPECTED[DATETIME],
@new_DATE_EXPECTED[DATETIME],
@old_DISCOUNT[DECIMAL](5,2),
@new_DISCOUNT[DECIMAL](5,2),
@old_ORDER_STATUS_ID[NVARCHAR](50),
@new_ORDER_STATUS_ID[NVARCHAR](50),
@old_USER_ADDRESS_ID[INT],
@new_USER_ADDRESS_ID[INT],
@old_HAS_ARRIVED[BIT],
@new_HAS_ARRIVED[BIT]
)
AS
BEGIN
UPDATE product_order
SET CUSTOMER_ID = @new_CUSTOMER_ID, ORDER_TYPE_ID = @new_ORDER_TYPE_ID, ADDRESS_TYPE = @new_ADDRESS_TYPE, DELIVERY_TYPE_ID = @new_DELIVERY_TYPE_ID, AMOUNT = @new_AMOUNT, ORDER_DATE = @new_ORDER_DATE, DATE_EXPECTED = @new_DATE_EXPECTED, DISCOUNT = @new_DISCOUNT, ORDER_STATUS_ID = @new_ORDER_STATUS_ID, USER_ADDRESS_ID = @new_USER_ADDRESS_ID, HAS_ARRIVED = @new_HAS_ARRIVED
WHERE (ORDER_ID = @old_ORDER_ID)
AND (CUSTOMER_ID = @old_CUSTOMER_ID)
AND (ORDER_TYPE_ID = @old_ORDER_TYPE_ID)
AND (ADDRESS_TYPE = @old_ADDRESS_TYPE)
AND (DELIVERY_TYPE_ID = @old_DELIVERY_TYPE_ID)
AND (AMOUNT = @old_AMOUNT)
AND (ORDER_DATE = @old_ORDER_DATE)
AND (DATE_EXPECTED = @old_DATE_EXPECTED)
AND (DISCOUNT = @old_DISCOUNT)
AND (ORDER_STATUS_ID = @old_ORDER_STATUS_ID)
AND (USER_ADDRESS_ID = @old_USER_ADDRESS_ID)
AND (HAS_ARRIVED = @old_HAS_ARRIVED)
END
