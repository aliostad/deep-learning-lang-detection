create or replace TRIGGER AIR_POSITIONNEMENT AFTER INSERT ON POSITIONNEMENT 
FOR EACH ROW 
DECLARE
 TMP_ID_FC NUMBER;

BEGIN

  IF :NEW.ID_CPTT IS NOT NULL THEN
   INSERT INTO W_SPC_CPTT (ID_SPC, ID_CPTT, NIVEAU_RIC, NIVEAU_SPC) VALUES (:NEW.ID_SPC, :NEW.ID_CPTT, NULL, :NEW.NIVEAU_COMPETENCE);

  ELSIF :NEW.ID_FC IS NOT NULL THEN
   INSERT INTO W_SPC_FC (ID_SPC, ID_FC, NIVEAU_RIC, NIVEAU_SPC) VALUES (:NEW.ID_SPC, :NEW.ID_FC, NULL, :NEW.NIVEAU_MATURITE);

  ELSIF :NEW.ID_CPT IS NOT NULL THEN
    IF :NEW.ID_FC_CAP IS NOT NULL THEN
      SELECT :NEW.ID_FC_CAP INTO TMP_ID_FC FROM DUAL;
    ELSE
      Select ID_FC INTO TMP_ID_FC FROM COMPETENCE WHERE ID_CPT = :NEW.ID_CPT;
    END IF;
   INSERT INTO W_SPC_CPT (ID_SPC, ID_FC, ID_CPT, NIVEAU_RIC, NIVEAU_SPC) VALUES (:NEW.ID_SPC, TMP_ID_FC, :NEW.ID_CPT, NULL, :NEW.NIVEAU_COMPETENCE);

  ELSIF :NEW.ID_CAP IS NOT NULL THEN
    IF :NEW.ID_FC_CAP IS NOT NULL THEN
      SELECT :NEW.ID_FC_CAP INTO TMP_ID_FC FROM DUAL;
    ELSE
      Select ID_FC INTO TMP_ID_FC FROM CAPACITE WHERE ID_CAP = :NEW.ID_CAP;
    END IF;
   INSERT INTO W_SPC_CAP (ID_SPC, ID_FC, ID_CAP, NIVEAU_RIC, NIVEAU_SPC) VALUES (:NEW.ID_SPC, TMP_ID_FC, :NEW.ID_CAP, NULL, :NEW.NIVEAU_MATURITE);

  END IF;
END;
/
