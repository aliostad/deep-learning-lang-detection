BEGIN

MERGE INTO TAG EXISTING_TAG USING
  (SELECT 
        '2007' KEY, 
        'PRTR-Meldung 2007' NAME,
        'PRTR-Meldung 2007' DESCRIPTION,
        TAGGROUP.ID TAGGROUP,
        TAGGROUP.KEY TAGGROUP_KEY
   FROM TAGGROUP
   WHERE TAGGROUP.KEY = 'EPRTR.NOTIFICATION_PERIOD') NEW_TAG ON (EXISTING_TAG.KEY = NEW_TAG.KEY
   AND EXISTING_TAG.TAGGROUP = NEW_TAG.TAGGROUP) 
    WHEN NOT matched THEN insert(KEY, NAME, DESCRIPTION, TAGGROUP, TAGGROUP_KEY)
    VALUES(NEW_TAG.KEY, NEW_TAG.NAME,
                        NEW_TAG.DESCRIPTION,
                        NEW_TAG.TAGGROUP,
                        NEW_TAG.TAGGROUP_KEY);

MERGE INTO TAG EXISTING_TAG USING
  (SELECT 
        '2008' KEY, 
        'PRTR-Meldung 2008' NAME,
        'PRTR-Meldung 2008' DESCRIPTION,
        TAGGROUP.ID TAGGROUP,
        TAGGROUP.KEY TAGGROUP_KEY
   FROM TAGGROUP
   WHERE TAGGROUP.KEY = 'EPRTR.NOTIFICATION_PERIOD') NEW_TAG ON (EXISTING_TAG.KEY = NEW_TAG.KEY
   AND EXISTING_TAG.TAGGROUP = NEW_TAG.TAGGROUP) 
    WHEN NOT matched THEN insert(KEY, NAME, DESCRIPTION, TAGGROUP, TAGGROUP_KEY)
    VALUES(NEW_TAG.KEY, NEW_TAG.NAME,
                        NEW_TAG.DESCRIPTION,
                        NEW_TAG.TAGGROUP,
                        NEW_TAG.TAGGROUP_KEY);

MERGE INTO TAG EXISTING_TAG USING
  (SELECT 
        '2009' KEY, 
        'PRTR-Meldung 2009' NAME,
        'PRTR-Meldung 2009' DESCRIPTION,
        TAGGROUP.ID TAGGROUP,
        TAGGROUP.KEY TAGGROUP_KEY
   FROM TAGGROUP
   WHERE TAGGROUP.KEY = 'EPRTR.NOTIFICATION_PERIOD') NEW_TAG ON (EXISTING_TAG.KEY = NEW_TAG.KEY
   AND EXISTING_TAG.TAGGROUP = NEW_TAG.TAGGROUP) 
    WHEN NOT matched THEN insert(KEY, NAME, DESCRIPTION, TAGGROUP, TAGGROUP_KEY)
    VALUES(NEW_TAG.KEY, NEW_TAG.NAME,
                        NEW_TAG.DESCRIPTION,
                        NEW_TAG.TAGGROUP,
                        NEW_TAG.TAGGROUP_KEY);

MERGE INTO TAG EXISTING_TAG USING
  (SELECT 
        '2010' KEY, 
        'PRTR-Meldung 2010' NAME,
        'PRTR-Meldung 2010' DESCRIPTION,
        TAGGROUP.ID TAGGROUP,
        TAGGROUP.KEY TAGGROUP_KEY
   FROM TAGGROUP
   WHERE TAGGROUP.KEY = 'EPRTR.NOTIFICATION_PERIOD') NEW_TAG ON (EXISTING_TAG.KEY = NEW_TAG.KEY
   AND EXISTING_TAG.TAGGROUP = NEW_TAG.TAGGROUP) 
    WHEN NOT matched THEN insert(KEY, NAME, DESCRIPTION, TAGGROUP, TAGGROUP_KEY)
    VALUES(NEW_TAG.KEY, NEW_TAG.NAME,
                        NEW_TAG.DESCRIPTION,
                        NEW_TAG.TAGGROUP,
                        NEW_TAG.TAGGROUP_KEY);

MERGE INTO TAG EXISTING_TAG USING
  (SELECT 
        '2011' KEY, 
        'PRTR-Meldung 2011' NAME,
        'PRTR-Meldung 2011' DESCRIPTION,
        TAGGROUP.ID TAGGROUP,
        TAGGROUP.KEY TAGGROUP_KEY
   FROM TAGGROUP
   WHERE TAGGROUP.KEY = 'EPRTR.NOTIFICATION_PERIOD') NEW_TAG ON (EXISTING_TAG.KEY = NEW_TAG.KEY
   AND EXISTING_TAG.TAGGROUP = NEW_TAG.TAGGROUP) 
    WHEN NOT matched THEN insert(KEY, NAME, DESCRIPTION, TAGGROUP, TAGGROUP_KEY)
    VALUES(NEW_TAG.KEY, NEW_TAG.NAME,
                        NEW_TAG.DESCRIPTION,
                        NEW_TAG.TAGGROUP,
                        NEW_TAG.TAGGROUP_KEY);

MERGE INTO TAG EXISTING_TAG USING
  (SELECT 
        'BODEN' KEY, 
        'Boden' NAME,
        'Freisetzung in den Boden' DESCRIPTION,
        TAGGROUP.ID TAGGROUP,
        TAGGROUP.KEY TAGGROUP_KEY
   FROM TAGGROUP
   WHERE TAGGROUP.KEY = 'EPRTR.RELEASE_TYPE') NEW_TAG ON (EXISTING_TAG.KEY = NEW_TAG.KEY
   AND EXISTING_TAG.TAGGROUP = NEW_TAG.TAGGROUP) 
    WHEN NOT matched THEN insert(KEY, NAME, DESCRIPTION, TAGGROUP, TAGGROUP_KEY)
    VALUES(NEW_TAG.KEY, NEW_TAG.NAME,
                        NEW_TAG.DESCRIPTION,
                        NEW_TAG.TAGGROUP,
                        NEW_TAG.TAGGROUP_KEY);

MERGE INTO TAG EXISTING_TAG USING
  (SELECT 
        'LUFT' KEY, 
        'Luft' NAME,
        'Freisetzung in die Luft' DESCRIPTION,
        TAGGROUP.ID TAGGROUP,
        TAGGROUP.KEY TAGGROUP_KEY
   FROM TAGGROUP
   WHERE TAGGROUP.KEY = 'EPRTR.RELEASE_TYPE') NEW_TAG ON (EXISTING_TAG.KEY = NEW_TAG.KEY
   AND EXISTING_TAG.TAGGROUP = NEW_TAG.TAGGROUP) 
    WHEN NOT matched THEN insert(KEY, NAME, DESCRIPTION, TAGGROUP, TAGGROUP_KEY)
    VALUES(NEW_TAG.KEY, NEW_TAG.NAME,
                        NEW_TAG.DESCRIPTION,
                        NEW_TAG.TAGGROUP,
                        NEW_TAG.TAGGROUP_KEY);

MERGE INTO TAG EXISTING_TAG USING
  (SELECT 
        'WASSER DIREKT' KEY, 
        'Wasser (direkt)' NAME,
        'Freisetzung in das Wasser (Direkteinleitung)' DESCRIPTION,
        TAGGROUP.ID TAGGROUP,
        TAGGROUP.KEY TAGGROUP_KEY
   FROM TAGGROUP
   WHERE TAGGROUP.KEY = 'EPRTR.RELEASE_TYPE') NEW_TAG ON (EXISTING_TAG.KEY = NEW_TAG.KEY
   AND EXISTING_TAG.TAGGROUP = NEW_TAG.TAGGROUP) 
    WHEN NOT matched THEN insert(KEY, NAME, DESCRIPTION, TAGGROUP, TAGGROUP_KEY)
    VALUES(NEW_TAG.KEY, NEW_TAG.NAME,
                        NEW_TAG.DESCRIPTION,
                        NEW_TAG.TAGGROUP,
                        NEW_TAG.TAGGROUP_KEY);

MERGE INTO TAG EXISTING_TAG USING
  (SELECT 
        'WASSER INDIREKT' KEY, 
        'Wasser (indirekt)' NAME,
        'Verbringung von im Abwasser enthaltenen Schadstoffen au√üerhalb des Standorts' DESCRIPTION,
        TAGGROUP.ID TAGGROUP,
        TAGGROUP.KEY TAGGROUP_KEY
   FROM TAGGROUP
   WHERE TAGGROUP.KEY = 'EPRTR.RELEASE_TYPE') NEW_TAG ON (EXISTING_TAG.KEY = NEW_TAG.KEY
   AND EXISTING_TAG.TAGGROUP = NEW_TAG.TAGGROUP) 
    WHEN NOT matched THEN insert(KEY, NAME, DESCRIPTION, TAGGROUP, TAGGROUP_KEY)
    VALUES(NEW_TAG.KEY, NEW_TAG.NAME,
                        NEW_TAG.DESCRIPTION,
                        NEW_TAG.TAGGROUP,
                        NEW_TAG.TAGGROUP_KEY);

END;