package stgxui

import (
	"github.com/google/gxui"
)

func KeyString(in gxui.KeyboardKey, shift bool) string {
	if shift {
		switch in {
		case gxui.KeySpace:
			return " "
		case gxui.KeyApostrophe:
			return "\""
		case gxui.KeyComma:
			return "<"
		case gxui.KeyMinus:
			return "_"
		case gxui.KeyPeriod:
			return ">"
		case gxui.KeySlash:
			return "?"
		case gxui.Key0:
			return ")"
		case gxui.Key1:
			return "!"
		case gxui.Key2:
			return "@"
		case gxui.Key3:
			return "#"
		case gxui.Key4:
			return "$"
		case gxui.Key5:
			return "%"
		case gxui.Key6:
			return "^"
		case gxui.Key7:
			return "&"
		case gxui.Key8:
			return "*"
		case gxui.Key9:
			return "("
		case gxui.KeySemicolon:
			return ":"
		case gxui.KeyEqual:
			return "+"
		case gxui.KeyA:
			return "A"
		case gxui.KeyB:
			return "B"
		case gxui.KeyC:
			return "C"
		case gxui.KeyD:
			return "D"
		case gxui.KeyE:
			return "E"
		case gxui.KeyF:
			return "F"
		case gxui.KeyG:
			return "G"
		case gxui.KeyH:
			return "H"
		case gxui.KeyI:
			return "I"
		case gxui.KeyJ:
			return "J"
		case gxui.KeyK:
			return "K"
		case gxui.KeyL:
			return "L"
		case gxui.KeyM:
			return "M"
		case gxui.KeyN:
			return "N"
		case gxui.KeyO:
			return "O"
		case gxui.KeyP:
			return "P"
		case gxui.KeyQ:
			return "Q"
		case gxui.KeyR:
			return "R"
		case gxui.KeyS:
			return "S"
		case gxui.KeyT:
			return "T"
		case gxui.KeyU:
			return "U"
		case gxui.KeyV:
			return "V"
		case gxui.KeyW:
			return "W"
		case gxui.KeyX:
			return "X"
		case gxui.KeyY:
			return "Y"
		case gxui.KeyZ:
			return "Z"
		case gxui.KeyLeftBracket:
			return "{"
		case gxui.KeyBackslash:
			return "|"
		case gxui.KeyRightBracket:
			return "}"
		case gxui.KeyGraveAccent:
			return "~"
		case gxui.KeyEnter:
			return "\n"
		case gxui.KeyTab:
			return "\t"
		default:
			return ""
		}
	} else {
		switch in {
		case gxui.KeySpace:
			return " "
		case gxui.KeyApostrophe:
			return "'"
		case gxui.KeyComma:
			return ","
		case gxui.KeyMinus:
			return "-"
		case gxui.KeyPeriod:
			return "."
		case gxui.KeySlash:
			return "/"
		case gxui.Key0:
			return "0"
		case gxui.Key1:
			return "1"
		case gxui.Key2:
			return "2"
		case gxui.Key3:
			return "3"
		case gxui.Key4:
			return "4"
		case gxui.Key5:
			return "5"
		case gxui.Key6:
			return "6"
		case gxui.Key7:
			return "7"
		case gxui.Key8:
			return "8"
		case gxui.Key9:
			return "9"
		case gxui.KeySemicolon:
			return ";"
		case gxui.KeyEqual:
			return "="
		case gxui.KeyA:
			return "a"
		case gxui.KeyB:
			return "b"
		case gxui.KeyC:
			return "c"
		case gxui.KeyD:
			return "d"
		case gxui.KeyE:
			return "e"
		case gxui.KeyF:
			return "f"
		case gxui.KeyG:
			return "g"
		case gxui.KeyH:
			return "h"
		case gxui.KeyI:
			return "i"
		case gxui.KeyJ:
			return "j"
		case gxui.KeyK:
			return "k"
		case gxui.KeyL:
			return "l"
		case gxui.KeyM:
			return "m"
		case gxui.KeyN:
			return "n"
		case gxui.KeyO:
			return "o"
		case gxui.KeyP:
			return "p"
		case gxui.KeyQ:
			return "q"
		case gxui.KeyR:
			return "r"
		case gxui.KeyS:
			return "s"
		case gxui.KeyT:
			return "t"
		case gxui.KeyU:
			return "u"
		case gxui.KeyV:
			return "v"
		case gxui.KeyW:
			return "w"
		case gxui.KeyX:
			return "x"
		case gxui.KeyY:
			return "y"
		case gxui.KeyZ:
			return "z"
		case gxui.KeyLeftBracket:
			return "["
		case gxui.KeyBackslash:
			return "\""
		case gxui.KeyRightBracket:
			return "]"
		case gxui.KeyGraveAccent:
			return "`"
		case gxui.KeyEnter:
			return "\n"
		case gxui.KeyTab:
			return "\t"
		default:
			return ""
		}
	}
}
