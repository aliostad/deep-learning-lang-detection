#!/usr/bin/env python
# -*- Encoding: utf-8 -*-
# vim: tabstop=4 shiftwidth=4 softtabstop=4

import os
import rdc_crawler.crawler.celery.queues as queues


# Crawler configuration
# CouchDb host
SERVER = 'http://{{ couch_host if couch_host is defined else "localhost" }}{{ ':' + couch_port if couch_port is defined }}/{{ couch_vhost }}'
# Crawler user-agent
USER_AGENT = '{{ user_agent if user_agent is defined else "Rdc-Crawler/0.0"}}'
# CouchDB user
COUCH_USER = '{{ couch_user }}'
# CouchDB user password
COUCH_PASS = '{{ couch_pass }}'

# Cache
CACHES = {
    'default': {
         'BACKEND': 'django.core.cache.backends.{{ cache_backend }}',
         'LOCATION': '{{ cache_host }}:{{ cache_port }}',
    }
}

# Databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.{{ db_engine }}',
        'NAME': '{{ db_name }}',
        'USER': '{{ db_user }}',
        'PASSWORD': '{{db_pass }}',
        'HOST': '{{ db_host }}',
        'PORT': '{{ db_port }}',
    }
}

# Make this unique, and don't share it with anybody.
SECRET_KEY = '{{ secret_key }}'

# Celery
# Broker settings
BROKER_TRANSPORT = 'couchdb'
BROKER_HOST = '{{ broker_host }}'
BROKER_PORT = '{{ broker_port }}'
BROKER_USER = '{{ broker_user }}'
BROKER_PASSWORD = '{{ broker_pass }}'
BROKER_VHOST = '{{ broker_vhost }}'

# Enables error emails.
CELERY_SEND_TASK_ERROR_EMAILS = True

# CELERYD_CONCURRENCY = 10
# CELERYD_LOG_FILE = "celeryd.log"
# CELERYD_LOG_LEVEL = "INFO"

# Celery queues
CELERY_QUEUES = queues.CELERY_QUEUES
CELERY_ROUTES = queues.CELERY_ROUTES

CELERY_DISABLE_RATE_LIMITS = True
CELERY_IGNORE_RESULT = True
CELERY_STORE_ERRORS_EVEN_IF_IGNORED = True

# Celery tasks
CELERY_IMPORTS = ("rdc_crawler.crawler.celery.tasks", )

# Email
EMAIL_BACKEND = 'django.core.mail.backends.filebased.EmailBackend'
EMAIL_FILE_PATH = os.path.dirname(os.path.join(os.path.dirname(__file__),
                                    '..','..', '..'))
# Whoosh configuration
WHOOSH_PATH = '{{ whoosh_path if whoosh_path is defined else code_dir }}'
LOCK_ATTEMPTS = {{ lock_attempts if lock_attempts is defined else 5 }}
