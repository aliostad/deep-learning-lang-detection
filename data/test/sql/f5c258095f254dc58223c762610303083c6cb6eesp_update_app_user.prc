USE [SnackOverflowDB]
GO
IF EXISTS(SELECT * FROM sys.objects WHERE type = 'P' AND  name = 'sp_update_app_user')
BEGIN
DROP PROCEDURE sp_update_app_user
Print '' print  ' *** dropping procedure sp_update_app_user'
End
GO

Print '' print  ' *** creating procedure sp_update_app_user'
GO
Create PROCEDURE sp_update_app_user
(
@old_USER_ID[INT],
@old_FIRST_NAME[NVARCHAR](150),
@new_FIRST_NAME[NVARCHAR](150),
@old_LAST_NAME[NVARCHAR](100)=null,
@new_LAST_NAME[NVARCHAR](100),
@old_PHONE[NVARCHAR](15),
@new_PHONE[NVARCHAR](15),
@old_PREFERRED_ADDRESS_ID[INT],
@new_PREFERRED_ADDRESS_ID[INT],
@old_E_MAIL_ADDRESS[NVARCHAR](50),
@new_E_MAIL_ADDRESS[NVARCHAR](50),
@old_E_MAIL_PREFERENCES[BIT],
@new_E_MAIL_PREFERENCES[BIT],
@old_PASSWORD_HASH[NVARCHAR](64),
@new_PASSWORD_HASH[NVARCHAR](64),
@old_PASSWORD_SALT[NVARCHAR](64),
@new_PASSWORD_SALT[NVARCHAR](64),
@old_USER_NAME[NVARCHAR](50),
@new_USER_NAME[NVARCHAR](50),
@old_ACTIVE[BIT],
@new_ACTIVE[BIT]
)
AS
BEGIN
UPDATE app_user
SET FIRST_NAME = @new_FIRST_NAME, LAST_NAME = @new_LAST_NAME, PHONE = @new_PHONE, PREFERRED_ADDRESS_ID = @new_PREFERRED_ADDRESS_ID, E_MAIL_ADDRESS = @new_E_MAIL_ADDRESS, E_MAIL_PREFERENCES = @new_E_MAIL_PREFERENCES, PASSWORD_HASH = @new_PASSWORD_HASH, PASSWORD_SALT = @new_PASSWORD_SALT, USER_NAME = @new_USER_NAME, ACTIVE = @new_ACTIVE
WHERE (USER_ID = @old_USER_ID)
AND (FIRST_NAME = @old_FIRST_NAME)
AND (LAST_NAME = @old_LAST_NAME OR ISNULL(LAST_NAME, @old_LAST_NAME) IS NULL)
AND (PHONE = @old_PHONE)
AND (PREFERRED_ADDRESS_ID = @old_PREFERRED_ADDRESS_ID)
AND (E_MAIL_ADDRESS = @old_E_MAIL_ADDRESS)
AND (E_MAIL_PREFERENCES = @old_E_MAIL_PREFERENCES)
AND (PASSWORD_HASH = @old_PASSWORD_HASH)
AND (PASSWORD_SALT = @old_PASSWORD_SALT)
AND (USER_NAME = @old_USER_NAME)
AND (ACTIVE = @old_ACTIVE)
END
