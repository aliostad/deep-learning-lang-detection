USE [SnackOverflowDB]
GO
IF EXISTS(SELECT * FROM sys.objects WHERE type = 'P' AND  name = 'sp_update_product_lot')
BEGIN
DROP PROCEDURE sp_update_product_lot
Print '' print  ' *** dropping procedure sp_update_product_lot'
End
GO

Print '' print  ' *** creating procedure sp_update_product_lot'
GO
Create PROCEDURE sp_update_product_lot
(
@old_PRODUCT_LOT_ID[INT],
@old_WAREHOUSE_ID[INT],
@new_WAREHOUSE_ID[INT],
@old_SUPPLIER_ID[INT],
@new_SUPPLIER_ID[INT],
@old_LOCATION_ID[INT],
@new_LOCATION_ID[INT],
@old_PRODUCT_ID[INT],
@new_PRODUCT_ID[INT],
@old_SUPPLY_MANAGER_ID[INT],
@new_SUPPLY_MANAGER_ID[INT],
@old_QUANTITY[INT],
@new_QUANTITY[INT],
@old_AVAILABLE_QUANTITY[INT],
@new_AVAILABLE_QUANTITY[INT],
@old_DATE_RECEIVED[DATETIME],
@new_DATE_RECEIVED[DATETIME],
@old_EXPIRATION_DATE[DATETIME],
@new_EXPIRATION_DATE[DATETIME]
)
AS
BEGIN
UPDATE product_lot
SET WAREHOUSE_ID = @new_WAREHOUSE_ID, SUPPLIER_ID = @new_SUPPLIER_ID, LOCATION_ID = @new_LOCATION_ID, PRODUCT_ID = @new_PRODUCT_ID, SUPPLY_MANAGER_ID = @new_SUPPLY_MANAGER_ID, QUANTITY = @new_QUANTITY, AVAILABLE_QUANTITY = @new_AVAILABLE_QUANTITY, DATE_RECEIVED = @new_DATE_RECEIVED, EXPIRATION_DATE = @new_EXPIRATION_DATE
WHERE (PRODUCT_LOT_ID = @old_PRODUCT_LOT_ID)
AND (WAREHOUSE_ID = @old_WAREHOUSE_ID)
AND (SUPPLIER_ID = @old_SUPPLIER_ID)
AND (LOCATION_ID = @old_LOCATION_ID)
AND (PRODUCT_ID = @old_PRODUCT_ID)
AND (SUPPLY_MANAGER_ID = @old_SUPPLY_MANAGER_ID)
AND (QUANTITY = @old_QUANTITY)
AND (AVAILABLE_QUANTITY = @old_AVAILABLE_QUANTITY)
AND (DATE_RECEIVED = @old_DATE_RECEIVED)
AND (EXPIRATION_DATE = @old_EXPIRATION_DATE)
END
